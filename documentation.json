{
    "pipes": [
        {
            "name": "ImgurUrlPipe",
            "id": "pipe-ImgurUrlPipe-0728cb3152bd276f3fa7299f88b88a9c5f3ad259cfa7d0b16b4f489c44d045fd0b7ae56bf988bd7ad282e1766c3cd777e8c71e2304f83a2861e4cc110ceda3f0",
            "file": "src/app/shared/pipes/imgur-url.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "imgurUrl",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'imgurUrl',\r\n  standalone: true,\r\n})\r\nexport class ImgurUrlPipe implements PipeTransform {\r\n  transform(value: string): unknown {\r\n    return value.replace('imgur', 'i.imgur') + '.png';\r\n  }\r\n}\r\n"
        }
    ],
    "interfaces": [],
    "injectables": [
        {
            "name": "AlertService",
            "id": "injectable-AlertService-98a36d1df5698ee476c352ffd5cacc0345a47960148380f64813b3da41ebdf08fc9807fd66f46b8e9b26e4b9942411ae35738bdb0f7d5a26fff0b3c473e9acfc",
            "file": "src/app/shared/components/feedback/alert/alert.service.ts",
            "properties": [
                {
                    "name": "alerts",
                    "defaultValue": "new BehaviorSubject<Alert[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addAlert",
                    "args": [
                        {
                            "name": "alert",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "type",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "alert",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteAlert",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport uniqid from 'uniqid';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AlertService {\r\n  private alerts = new BehaviorSubject<Alert[]>([]);\r\n\r\n  constructor() {}\r\n\r\n  public get alertList() {\r\n    return this.alerts.asObservable();\r\n  }\r\n\r\n  public addAlert(alert: Alert['val'], type: Alert['type']) {\r\n    const current = this.alerts.getValue();\r\n    current.push({ val: alert, id: uniqid(), type });\r\n    this.alerts.next(current);\r\n  }\r\n\r\n  public deleteAlert(id: string) {\r\n    const current = this.alerts.getValue();\r\n    const toDelete = current.findIndex((al) => al.id === id);\r\n    if (toDelete !== -1) {\r\n      current.splice(toDelete, 1);\r\n    }\r\n    this.alerts.next(current);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "accessors": {
                "alertList": {
                    "name": "alertList",
                    "getSignature": {
                        "name": "alertList",
                        "type": "",
                        "returnType": "",
                        "line": 13
                    }
                }
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "AuthService",
            "id": "injectable-AuthService-efef60b7e571c66815650b9054a51d16314bf00eb65e847dd2db5264cb98a602002d25cdf58e55d03fd345bbaf8764a1482a8538d544ac2578a71c7479037c49",
            "file": "src/app/features/auth/auth.service.ts",
            "properties": [
                {
                    "name": "$user",
                    "defaultValue": "new BehaviorSubject<User | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<User | null>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addToSeen",
                    "args": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editMe",
                    "args": [
                        {
                            "name": "user",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getMe",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "importLetterboxd",
                    "args": [
                        {
                            "name": "fd",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fd",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "importTrakt",
                    "args": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "data",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "recoverLoggedUser",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "signup",
                    "args": [
                        {
                            "name": "data",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, map, of, switchMap, tap } from 'rxjs';\r\nimport { LoadingService } from 'src/app/core/services/loading.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  public $user: BehaviorSubject<User | null> = new BehaviorSubject<User | null>(null);\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private loadingSrv: LoadingService,\r\n  ) {\r\n    this.getMe().subscribe();\r\n  }\r\n\r\n  login(data: FormData) {\r\n    return this.http.post<User>(`${environment.url}user/login`, data, { observe: 'response' }).pipe(\r\n      tap((res) => {\r\n        this.$user?.next(res.body);\r\n        this.router.navigate(['landing']);\r\n        localStorage.setItem('doppiatori', res.headers.get('Authorization')!);\r\n      }),\r\n    );\r\n  }\r\n  signup(data: FormData) {\r\n    return this.http.post<User>(`${environment.url}user/register`, data);\r\n  }\r\n\r\n  getMe() {\r\n    return this.http.get<User>(`${environment.url}user/me`).pipe(\r\n      map((user) => {\r\n        this.$user.next(user);\r\n        return user;\r\n      }),\r\n    );\r\n  }\r\n\r\n  editMe(user: FormData) {\r\n    this.loadingSrv.setLoading = true;\r\n    return this.http.put<User>(`${environment.url}user/me`, user).pipe(\r\n      map((user) => {\r\n        this.loadingSrv.setLoading = false;\r\n        this.$user.next(user);\r\n        return user;\r\n      }),\r\n    );\r\n  }\r\n\r\n  recoverLoggedUser() {\r\n    return this.$user.pipe(\r\n      switchMap((user) => {\r\n        const token = localStorage.getItem('doppiatori');\r\n        if (!user && token) {\r\n          return this.getMe();\r\n        }\r\n        return of(user);\r\n      }),\r\n    );\r\n  }\r\n\r\n  importTrakt(username: string) {\r\n    this.loadingSrv.setLoading = true;\r\n    return this.http.put<IImport>(`${environment.url}user/me/import/trakt/${username}`, {}).pipe(\r\n      tap(() => {\r\n        this.loadingSrv.setLoading = false;\r\n      }),\r\n    );\r\n  }\r\n\r\n  importLetterboxd(fd: FormData) {\r\n    this.loadingSrv.setLoading = true;\r\n    return this.http.put<IImport>(`${environment.url}user/me/import/letterboxd`, fd).pipe(\r\n      tap(() => {\r\n        this.loadingSrv.setLoading = false;\r\n      }),\r\n    );\r\n  }\r\n\r\n  addToSeen(title: string) {\r\n    return this.http.get<IWork>(`${environment.url}works?query=${title}`).pipe(\r\n      switchMap((res) => {\r\n        return this.http.put<IImport>(`${environment.url}user/me/watch/${res._id}`, {});\r\n      }),\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    this.$user.next(null);\r\n    localStorage.removeItem('doppiatori');\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loadingSrv",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loadingSrv",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "DoppiatoriService",
            "id": "injectable-DoppiatoriService-4971e8deaff3720b33c964e910e8884a9dcb3c5d7c827a9c7a96d7688be7e6ad8b6bd07acfa4d61f9b12bbffd9c3aea262bdacd545354ea2baded2c7490a8618",
            "file": "src/app/features/doppiatori/doppiatori.service.ts",
            "properties": [
                {
                    "name": "emptySuggestions",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "fetchSuggestions",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "navigateToComparison",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 91
                },
                {
                    "name": "navigateToUserComparison",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "query",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "showOneQuery",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "showTwoQuery",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "suggestions",
                    "defaultValue": "new BehaviorSubject<string[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "suggestionsOne",
                    "defaultValue": "new BehaviorSubject<string[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "suggestionsTwo",
                    "defaultValue": "new BehaviorSubject<string[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "suggestionsWatchList",
                    "defaultValue": "new BehaviorSubject<string[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "watchListQuery",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [
                {
                    "name": "getComparison",
                    "args": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title2",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title2",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSuggestions",
                    "args": [
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "input",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "input",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUserComparison",
                    "args": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "pickSuggestion",
                    "args": [
                        {
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, map, switchMap, tap } from 'rxjs';\r\nimport { LoadingService } from 'src/app/core/services/loading.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DoppiatoriService {\r\n  [key: string]: any;\r\n\r\n  //compare\r\n  showOneQuery = new BehaviorSubject<string>('');\r\n  showTwoQuery = new BehaviorSubject<string>('');\r\n  watchListQuery = new BehaviorSubject<string>('');\r\n  suggestionsOne = new BehaviorSubject<string[]>([]);\r\n  suggestionsTwo = new BehaviorSubject<string[]>([]);\r\n  suggestionsWatchList = new BehaviorSubject<string[]>([]);\r\n\r\n  //user search && user compare\r\n  suggestions = new BehaviorSubject<string[]>([]);\r\n  query = new BehaviorSubject<string>('');\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private loadingSrv: LoadingService,\r\n  ) {}\r\n\r\n  private getSuggestions(query: string, input: string) {\r\n    return this.http\r\n      .get<\r\n        string[]\r\n      >(`${environment.url}doppiatori/suggestions?query=${encodeURI(query.toLowerCase())}`)\r\n      .pipe(tap((res) => this[input].next(res)));\r\n  }\r\n\r\n  public getComparison(title: string, title2: string) {\r\n    this.loadingSrv.setLoading = true;\r\n    return this.http\r\n      .get<ICompare[]>(`${environment.url}doppiatori/compare?work=${title}&compareTo=${title2}`)\r\n      .pipe(\r\n        tap(() => {\r\n          this.loadingSrv.setLoading = false;\r\n        }),\r\n      );\r\n  }\r\n\r\n  public getUserComparison(title: string) {\r\n    this.loadingSrv.setLoading = true;\r\n    console.log(title);\r\n    return this.http.get<IWork>(`${environment.url}works/name?name=${title}`).pipe(\r\n      switchMap(({ _id }) => {\r\n        return this.http.get<ICompare[]>(`${environment.url}doppiatori/user-compare/${_id}`);\r\n      }),\r\n      map((characters) => {\r\n        return characters.map((char) => {\r\n          return {\r\n            ...char,\r\n            characters: char.characters.filter((c) => c.character.length > 0),\r\n          };\r\n        });\r\n      }),\r\n      tap(() => {\r\n        this.loadingSrv.setLoading = false;\r\n      }),\r\n    );\r\n  }\r\n\r\n  public fetchSuggestions = (ev: Event, varName: string) => {\r\n    const target = ev.target as HTMLInputElement;\r\n    this[target.name].next(target.value);\r\n    if (this[target.name].getValue().length % 3 && target.value.length > 3) {\r\n      this.getSuggestions(this[target.name].getValue(), varName).subscribe();\r\n    }\r\n  };\r\n\r\n  emptySuggestions = (input: string) => {\r\n    setTimeout(() => {\r\n      this[input].next([]);\r\n    }, 300);\r\n  };\r\n\r\n  pickSuggestion({ target }: Event) {\r\n    const targetAsDiv = target as HTMLDivElement;\r\n    this[targetAsDiv.id].next(targetAsDiv.innerText);\r\n    return targetAsDiv.innerText;\r\n  }\r\n\r\n  navigateToComparison = () => {\r\n    this.router.navigate(['/compare'], {\r\n      queryParams: {\r\n        title: this.showOneQuery.getValue(),\r\n        compareTo: this.showTwoQuery.getValue(),\r\n      },\r\n    });\r\n  };\r\n  navigateToUserComparison = () => {\r\n    this.router.navigate(['/compare'], {\r\n      queryParams: {\r\n        query: this.watchListQuery.getValue(),\r\n      },\r\n    });\r\n  };\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loadingSrv",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loadingSrv",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "LoadingService",
            "id": "injectable-LoadingService-f4f6772e37469ba6d5b48f89bff4038dafefdd4170b517506932dc2cfc39e7f60c671dc9b5adf70ecfc14328622943be7550e5f1c932e99e2f46a2e3e2445c1e",
            "file": "src/app/core/services/loading.service.ts",
            "properties": [
                {
                    "name": "$loading",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoadingService {\r\n  public $loading = new BehaviorSubject<boolean>(false);\r\n  constructor() {}\r\n\r\n  public set setLoading(val: boolean) {\r\n    this.$loading.next(val);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "accessors": {
                "setLoading": {
                    "name": "setLoading",
                    "setSignature": {
                        "name": "setLoading",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 11,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "WorkService",
            "id": "injectable-WorkService-a3dbb19c5015aacc0b8dc3fb5bb12a0ce0bc5dc172bed0fc5eee389d55db4565011f1559522558ef13558a8df833f91039cfa6c1292a70fb4a99ace7e0af8399",
            "file": "src/app/features/works/work.service.ts",
            "properties": [
                {
                    "name": "pages",
                    "defaultValue": "new BehaviorSubject<number>(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "total",
                    "defaultValue": "new BehaviorSubject<number>(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "works",
                    "defaultValue": "new BehaviorSubject<IWork[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getWorks",
                    "args": [
                        {
                            "name": "q",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "1"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "q",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "1",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "optimisticToggleSeen",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unwatchWork",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "watchWork",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, map, tap } from 'rxjs';\r\nimport { LoadingService } from 'src/app/core/services/loading.service';\r\nimport { AlertService } from 'src/app/shared/components/feedback/alert/alert.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WorkService {\r\n  public works = new BehaviorSubject<IWork[]>([]);\r\n  public pages = new BehaviorSubject<number>(0);\r\n  public total = new BehaviorSubject<number>(0);\r\n  constructor(\r\n    private http: HttpClient,\r\n    private loadingSrv: LoadingService,\r\n    private alertSrv: AlertService,\r\n  ) {}\r\n\r\n  getWorks(q: string, page: number = 1) {\r\n    console.log('pippo1');\r\n\r\n    return this.http.get<IWorkPaged>(`${environment.url}works?query=${q}&page=${page}`).pipe(\r\n      tap((res) => {\r\n        this.loadingSrv.setLoading = false;\r\n        this.total.next(res.total);\r\n        this.pages.next(Math.ceil(res.total / 10) + 1);\r\n      }),\r\n      map((res) => this.works.next(res.data)),\r\n    );\r\n  }\r\n\r\n  watchWork(id: string) {\r\n    return this.http.put<IWork[]>(`${environment.url}user/me/watch/${id}`, null).pipe(\r\n      tap(() => {\r\n        this.optimisticToggleSeen(id);\r\n      }),\r\n    );\r\n  }\r\n\r\n  unwatchWork(id: string) {\r\n    return this.http.put<IWork[]>(`${environment.url}user/me/unwatch/${id}`, null).pipe(\r\n      tap(() => {\r\n        this.optimisticToggleSeen(id);\r\n      }),\r\n    );\r\n  }\r\n\r\n  optimisticToggleSeen(id: string) {\r\n    const currentWorks = this.works.getValue();\r\n    for (let i = 0; i < currentWorks.length; i++) {\r\n      const work = currentWorks[i];\r\n      if (work._id === id) {\r\n        currentWorks[i].isSeen = !currentWorks[i].isSeen;\r\n        this.alertSrv.addAlert(\r\n          `Elemento ${currentWorks[i].isSeen ? 'aggiunto ' : 'rimosso d'}alla tua lista`,\r\n          'info',\r\n        );\r\n        break;\r\n      }\r\n    }\r\n    this.works.next(currentWorks);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loadingSrv",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "alertSrv",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loadingSrv",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "alertSrv",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [
        {
            "name": "ErrorInterceptor",
            "id": "injectable-ErrorInterceptor-2a57a8515fa6101a1662970cc8c895b969ea11ca8f097fc55c05a0747d8bd42ebf9ebdfb96160865efff79066ba0045d95e0d4bc12e70d06ad492e7d319e6708",
            "file": "src/app/core/interceptors/error.interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "request",
                            "type": "HttpRequest<>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<>>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "HttpRequest<>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { catchError, Observable, OperatorFunction, retry, tap, throwError, timer } from 'rxjs';\r\nimport { LoadingService } from '../services/loading.service';\r\nimport { AlertService } from 'src/app/shared/components/feedback/alert/alert.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private alertSrv: AlertService,\r\n    private loadingSrv: LoadingService,\r\n  ) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    const catchErr: OperatorFunction<HttpEvent<any>, HttpEvent<unknown>> = catchError((err) => {\r\n      this.alertSrv.addAlert(err.error.message, 'error');\r\n      this.loadingSrv.setLoading = false;\r\n      return throwError(() => err);\r\n    });\r\n    if (request.url.includes('/user/me') && request.method === 'GET') {\r\n      return next.handle(request);\r\n    }\r\n    if (request.url.includes('compare') || request.url.includes('works?query=')) {\r\n      return next.handle(request).pipe(\r\n        retry({\r\n          count: 3,\r\n          delay: (_, count) => timer(5000 * count),\r\n        }),\r\n        catchErr,\r\n      );\r\n    }\r\n    return next.handle(request).pipe(catchErr);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "alertSrv",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loadingSrv",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "alertSrv",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loadingSrv",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "interceptor"
        },
        {
            "name": "TokenInterceptor",
            "id": "injectable-TokenInterceptor-92082c47288b801e2393f69d54345f72d38ef6a4a777ab70888380172bba68cca4a7ccdbfe63171ca87bfb99f8ce9501a638548fa415d76451a6b525152d7c36",
            "file": "src/app/core/interceptors/token.interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "request",
                            "type": "HttpRequest<>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<>>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "HttpRequest<>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { catchError, Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(private router: Router) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    if (request.url.includes('login') || request.url.includes('register'))\r\n      return next.handle(request);\r\n    const clone = request.clone({\r\n      headers: request.headers.set(\r\n        'Authorization',\r\n        ('Bearer ' + localStorage.getItem('doppiatori')) as string,\r\n      ),\r\n    });\r\n\r\n    return next.handle(clone).pipe(\r\n      catchError((err: HttpErrorResponse) => {\r\n        const EXCLUDED_URLS = ['/landing', '/compare'];\r\n        if (err.status === 401 && !EXCLUDED_URLS.some((url) => this.router.url.includes(url))) {\r\n          this.router.navigate(['/auth']);\r\n        }\r\n        throw err;\r\n      }),\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "interceptor"
        }
    ],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AlertComponent",
            "id": "component-AlertComponent-a6fe98a0fe891237c3aee235250641aa355a6f0d43b334f91714f4bdad315dc231b4a49e45fdc8e6563957904e04b30671966ada31d5c5a15190b80cfa23c747",
            "file": "src/app/shared/components/feedback/alert/alert.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-alert",
            "styleUrls": [
                "./alert.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./alert.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "'0'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classList",
                    "defaultValue": "['alert']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "deleteSelf",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { AppModule } from 'src/app/app.module';\r\nimport { AlertService } from './alert.service';\r\n\r\n@Component({\r\n  selector: 'app-alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.scss'],\r\n})\r\nexport class AlertComponent implements OnInit {\r\n  @Input() id: Alert['id'] = '0';\r\n  @Input() type: Alert['type'] = 'info';\r\n  classList = ['alert'];\r\n  constructor(private srv: AlertService) {}\r\n  ngOnInit(): void {\r\n    setTimeout(this.deleteSelf, 3000);\r\n  }\r\n\r\n  deleteSelf = () => {\r\n    this.classList.push('deleting');\r\n    setTimeout(() => {\r\n      this.classList.pop();\r\n      this.srv.deleteAlert(this.id);\r\n    }, 1000);\r\n  };\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/styles/colors\";\r\n\r\n.alert {\r\n  background-color: transparentize(white, 0.5);\r\n  backdrop-filter: blur(10px);\r\n  padding: 20px;\r\n  padding-top: 40px;\r\n  margin-block: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid;\r\n  overflow: hidden;\r\n  width: fit-content;\r\n\r\n  opacity: 1;\r\n  transition: 1s;\r\n\r\n  position: relative;\r\n\r\n  .close {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 10px;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 20px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    ion-icon {\r\n      position: absolute;\r\n      left: 50%;\r\n      top: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n\r\n  &--info {\r\n    background-color: transparentize(white, 0.5);\r\n    border-color: white;\r\n    .close {\r\n      background-color: white;\r\n    }\r\n  }\r\n\r\n  &--alert {\r\n    background-color: transparentize($primary, 0.5);\r\n    color: white;\r\n    border-color: $primary;\r\n    .close {\r\n      background-color: $primary;\r\n    }\r\n  }\r\n\r\n  &--error {\r\n    background-color: transparentize(lighten($accent, 30), 0.4);\r\n    border-color: $accent;\r\n    .close {\r\n      background-color: $accent;\r\n    }\r\n  }\r\n\r\n  &__header {\r\n    padding: 5px;\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n}\r\n\r\n\r\n.deleting {\r\n  opacity: 0;\r\n}\r\n\r\n\r\n",
                    "styleUrl": "./alert.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "srv",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "srv",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n  [class]=\"classList.join(' ')\"\r\n  [ngClass]=\"{\r\n    'alert--info': type === 'info',\r\n    'alert--alert': type === 'alert',\r\n    'alert--error': type === 'error',\r\n  }\"\r\n>\r\n  <div class=\"close\">\r\n    <ion-icon name=\"close\" (click)=\"deleteSelf()\"></ion-icon>\r\n  </div>\r\n  <div class=\"alert__body\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-2ca05f4872d57b907087f1175484668d03f56a1b8191d531ea4741d73fc6211cfed6c02fe6c0391e00f24a43dd7f8748c9fd998f806fa5271d33c0e74dc50f5e",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "alerts",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Alert[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "title",
                    "defaultValue": "'dove-cazz-ho-sentito-questo-doppiatore-2'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { AuthService } from './features/auth/auth.service';\r\nimport { AlertService } from './shared/components/feedback/alert/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  title = 'dove-cazz-ho-sentito-questo-doppiatore-2';\r\n  alerts: Alert[] = [];\r\n\r\n  constructor(\r\n    private authSrv: AuthService,\r\n    private alertSrv: AlertService,\r\n  ) {\r\n    this.authSrv.getMe().subscribe();\r\n    this.alertSrv.alertList.subscribe((alerts) => (this.alerts = alerts));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".alert__list {\r\n  position: fixed;\r\n  bottom: 10px;\r\n  right: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authSrv",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "alertSrv",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "authSrv",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "alertSrv",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>\r\n<div class=\"alert__list\">\r\n  <app-alert *ngFor=\"let alert of alerts\" [id]=\"alert.id\" [type]=\"alert.type\">\r\n    {{ alert.val }}\r\n  </app-alert>\r\n</div>\r\n"
        },
        {
            "name": "AuthComponent",
            "id": "component-AuthComponent-d84fdf472bfee91be85a1f88b2856d2bcde6cafbe455409e44fb4050edf8afcb4614ab6462d5ba61c6a24b321950225f0349a788629eb4d3cb1bd3c27065628d",
            "file": "src/app/features/auth/views/auth/auth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth",
            "styleUrls": [
                "./auth.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./auth.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "state",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "handleLogin",
                    "args": [
                        {
                            "name": "ev",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleRegister",
                    "args": [
                        {
                            "name": "ev",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "passValidator",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "requiredValidator",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { AuthService } from '../../auth.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertService } from 'src/app/shared/components/feedback/alert/alert.service';\r\nimport { password, required } from 'src/app/core/validators';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss'],\r\n})\r\nexport class AuthComponent {\r\n  constructor(\r\n    private authSrv: AuthService,\r\n    private alertSrv: AlertService,\r\n    private route: ActivatedRoute,\r\n  ) {\r\n    this.route.queryParams.subscribe((qp) => {\r\n      qp['signup'] === 'true' ? (this.state = false) : (this.state = true);\r\n    });\r\n  }\r\n\r\n  state: boolean = true;\r\n\r\n  handleLogin(ev: Event) {\r\n    const formData = new FormData(ev.target as HTMLFormElement);\r\n    return this.authSrv.login(formData).subscribe();\r\n  }\r\n\r\n  handleRegister(ev: Event) {\r\n    const formData = new FormData(ev.target as HTMLFormElement);\r\n    console.log(formData.get('password'), formData.get('confirmPassword'));\r\n    if (formData.get('password') !== formData.get('confirmPassword')) {\r\n      this.alertSrv.addAlert(\"Passwords don't match\", 'error');\r\n      return;\r\n    }\r\n    return this.authSrv.signup(formData).subscribe();\r\n  }\r\n\r\n  toggleState() {\r\n    this.state = !this.state;\r\n  }\r\n\r\n  passValidator() {\r\n    return password;\r\n  }\r\n  requiredValidator() {\r\n    return required;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/styles/colors\";\r\n@import \"src/styles/types\";\r\n:host {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  container-type: inline-size;\r\n  .auth__page {\r\n    width: 70%;\r\n    margin-inline: 15%;\r\n    container-type: inline-size;\r\n    background-color: transparentize($primary, 0.7);\r\n    border: 1px $primary solid;\r\n    border-radius: 5px;\r\n    position: relative;\r\n    display: flex;\r\n\r\n    @container (max-width: 1100px) {\r\n      margin-inline: 10%;\r\n      width: 80%;\r\n      align-items: center;\r\n    }\r\n\r\n    @container (max-width: 840px) {\r\n      flex-direction: column;\r\n    }\r\n    .panel {\r\n      position: absolute;\r\n      z-index: 1000;\r\n      &.login {\r\n        transform: translateX(100%);\r\n        box-shadow: -2px 0 5px 0 rgb(0, 0, 0, 0.3);\r\n        -webkit-box-shadow: -2px 0 5px 0 rgb(0, 0, 0, 0.3);\r\n        border-top-right-radius: inherit;\r\n        border-bottom-right-radius: inherit;\r\n        @container (max-width: 670px) {\r\n          width: 100%;\r\n          height: 60%;\r\n          transform: translateY(67%);\r\n          box-shadow: 0 -2px 5px 0 rgb(0, 0, 0, 0.3);\r\n          -webkit-box-shadow: 0 -2px 5px 0 rgb(0, 0, 0, 0.3);\r\n          border-top-right-radius: inherit;\r\n          border-top-left-radius: inherit;\r\n        }\r\n      }\r\n      &.register {\r\n        transform: translateX(0);\r\n        box-shadow: 2px 0px 5px 0px rgb(0, 0, 0, 0.3);\r\n        -webkit-box-shadow: 2px 0px 5px 0px rgb(0, 0, 0, 0.3);\r\n        border-top-left-radius: inherit;\r\n        border-bottom-left-radius: inherit;\r\n        @container (max-width: 670px) {\r\n          width: 100%;\r\n          height: 40%;\r\n          transform: translateY(0);\r\n          box-shadow: 0 2px 5px 0 rgb(0, 0, 0, 0.3);\r\n          -webkit-box-shadow: 0 2px 5px 0 rgb(0, 0, 0, 0.3);\r\n          border-bottom-right-radius: inherit;\r\n          border-bottom-left-radius: inherit;\r\n          font-size: 15px;\r\n          img {\r\n            width: 70%;\r\n          }\r\n          li {\r\n            padding-bottom: 10px;\r\n          }\r\n        }\r\n      }\r\n      width: 50%;\r\n      height: 100%;\r\n      background-color: $primary;\r\n\r\n      padding: 50px 70px;\r\n      @container (max-width: 1100px) {\r\n        padding: 25px 35px;\r\n      }\r\n\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      color: white;\r\n      font-size: $text;\r\n\r\n      transition: 0.5s;\r\n\r\n      ul {\r\n        padding-left: 10px;\r\n      }\r\n      li {\r\n        padding-bottom: 20px;\r\n      }\r\n      span {\r\n        color: $accent;\r\n        text-decoration: underline;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n    form {\r\n      width: 50%;\r\n      padding: 50px 100px;\r\n      // padding-block: 50px;\r\n\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      gap: 10px;\r\n      app-button,\r\n      app-input {\r\n        width: 100%;\r\n        min-width: 260px;\r\n        @container (max-width: 340px) {\r\n          min-width: 200px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./auth.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authSrv",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "alertSrv",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "authSrv",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "alertSrv",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"auth__page\">\r\n  <div\r\n    class=\"panel\"\r\n    [ngClass]=\"{\r\n      login: this.state,\r\n      register: !this.state,\r\n    }\"\r\n  >\r\n    <img src=\"../../../assets/titolo-sm.png\" alt=\"\" />\r\n    <ul>\r\n      <li>\r\n        Aggiungi le serie TV e i film che hai visto al tuo profilo e scopri\r\n        subito dove hai già sentito quella voce.\r\n      </li>\r\n      <li>Importa le tue liste da letterboxd e trackt.tv</li>\r\n      <li>Trova doppiatori in comune tra due serie</li>\r\n    </ul>\r\n\r\n    <div *ngIf=\"!state; else Login\">\r\n      Hai già un account? <span (click)=\"toggleState()\">Entra</span>\r\n    </div>\r\n    <ng-template #Login>\r\n      <div>\r\n        Non hai ancora un account?\r\n        <span (click)=\"toggleState()\">Registrati</span>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n  <form class=\"auth__form-login\" (ngSubmit)=\"handleLogin($event)\">\r\n    <app-input type=\"email\" name=\"email\" placeholder=\"Email\"></app-input>\r\n    <app-input\r\n      type=\"password\"\r\n      name=\"password\"\r\n      placeholder=\"Password\"\r\n    ></app-input>\r\n    <app-button [type]=\"'submit'\">Login</app-button>\r\n  </form>\r\n\r\n  <form class=\"auth__form-login\" (submit)=\"handleRegister($event)\">\r\n    <app-input type=\"email\" name=\"email\" placeholder=\"Email\"></app-input>\r\n    <app-input type=\"text\" name=\"name\" placeholder=\"Nome\"></app-input>\r\n    <app-input type=\"text\" name=\"lastName\" placeholder=\"Cognome\"></app-input>\r\n    <app-input\r\n      type=\"password\"\r\n      name=\"password\"\r\n      placeholder=\"Password\"\r\n      [validatorFn]=\"passValidator()\"\r\n      validatorMsg=\"La password deve contenere almeno una lettera maiuscola, un carattere speciale ed essere lunga almeno 8 caratteri\"\r\n    ></app-input>\r\n    <app-input\r\n      type=\"password\"\r\n      name=\"confirmPassword\"\r\n      placeholder=\"Conferma password\"\r\n    ></app-input>\r\n    <app-button>Registrati</app-button>\r\n  </form>\r\n</div>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-7951d2208c48ed7cf99368fea53b8a589a30308af8ef38eeaa996c73202c15b8075a3adea15d775db96d41e16c1aa8cb03b18ec8eeff3c30594c418b9774483d",
            "file": "src/app/shared/components/layout/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "onClick",
                    "defaultValue": "() => 0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "function",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"button\" | \"submit\" | \"reset\"",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btn'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { AfterViewInit, Component, ElementRef, Input, OnChanges, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n})\r\nexport class ButtonComponent implements AfterViewInit, OnChanges {\r\n  @Input() value!: string;\r\n  @Input() onClick: () => void = () => 0;\r\n  @Input() type!: 'button' | 'submit' | 'reset';\r\n  @Input() disabled: boolean = false;\r\n\r\n  @ViewChild('btn') btn!: ElementRef;\r\n\r\n  ngAfterViewInit() {\r\n    if (this.btn) {\r\n      this.btn.nativeElement.disabled = this.disabled;\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.btn) {\r\n      this.btn.nativeElement.disabled = this.disabled;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/styles/mixins\";\r\n\r\nbutton {\r\n  @include button\r\n}\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit",
                "OnChanges"
            ],
            "templateData": "<button (click)=\"onClick()\" #btn>\r\n  {{ value }}\r\n  <ng-content *ngIf=\"!value\"></ng-content>\r\n</button>\r\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-3f8df343210e37593ce79179ca85269af1f29ca2a65d462b1dd0f59da96678a57df9fb04f04827bbdf2923a455fe6b49ec87830c6f838fc997efca9600658a5e",
            "file": "src/app/shared/components/layout/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "work",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "IWork",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "unwatchWork",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "watchWork",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { WorkService } from 'src/app/features/works/work.service';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss'],\r\n})\r\nexport class CardComponent {\r\n  @Input() work!: IWork;\r\n  // @Output() handleOptimistic = new EventEmitter();\r\n  constructor(private workSrv: WorkService) {}\r\n\r\n  watchWork = () => {\r\n    this.workSrv.watchWork(this.work._id).subscribe();\r\n  };\r\n\r\n  unwatchWork = () => {\r\n    this.workSrv.unwatchWork(this.work._id).subscribe();\r\n  };\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/styles/colors\";\r\n\r\n:host {\r\n  display: block;\r\n  flex: 1 0 calc(20% - 20px);\r\n  max-width: max-content;\r\n  min-width: 200px;\r\n  // width: clamp(200px, calc(20% - 20px), 400px);\r\n  height: 100%;\r\n  .card {\r\n    height: 100%;\r\n    aspect-ratio: 4/5;\r\n    background-color: rgb(183, 212, 255, 0.5);\r\n    backdrop-filter: blur(4);\r\n    border: 1px solid $primary;\r\n    border-radius: 5px;\r\n    // padding: 10px;\r\n    position: relative;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding-bottom: 20px;\r\n    &__bg {\r\n      height: 50%;\r\n      width: 100%;\r\n      opacity: 50%;\r\n    }\r\n    &__body {\r\n      padding: 20px;\r\n      h3 {\r\n        margin: 0;\r\n      }\r\n    }\r\n    &__actions {\r\n      display: flex;\r\n      gap: 10px;\r\n      ::ng-deep {\r\n        button {\r\n          padding: 8px 16px;\r\n          line-height: 100%;\r\n        }\r\n      }\r\n    }\r\n    img {\r\n      width: 100%;\r\n      height: 50%;\r\n      aspect-ratio: 1/1;\r\n      object-fit: contain;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      backdrop-filter: blur(10px);\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "workSrv",
                        "type": "WorkService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "workSrv",
                        "type": "WorkService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"card\">\r\n  <div class=\"card__bg\" [style]=\"'background-image: url(' + work.poster + ')'\"></div>\r\n  <div class=\"card__body\">\r\n    <img [src]=\"work.poster\" [alt]=\"work.title\" />\r\n    <h3>{{ work.title }}</h3>\r\n  </div>\r\n  <div class=\"card__actions\">\r\n    <app-button *ngIf=\"!work.isSeen\" [onClick]=\"watchWork\"> <ion-icon name=\"eye-outline\"></ion-icon> </app-button>\r\n    <app-button *ngIf=\"work.isSeen\" [onClick]=\"unwatchWork\"> <ion-icon name=\"eye-off-outline\"></ion-icon> </app-button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CompareCardComponent",
            "id": "component-CompareCardComponent-1b6ebf6f97ca5db94a49700a3fa9feb83cb98087280cbb65251f4ccdb7d2bc7387214eaa45223a9eb5e8fa7d135315b52e9e53b97c7544031c17a24edf702f2d",
            "file": "src/app/features/characters/compare-card/compare-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-compare-card",
            "styleUrls": [
                "./compare-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./compare-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "characters",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "'Marco Rossi'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, OnChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-compare-card',\r\n  templateUrl: './compare-card.component.html',\r\n  styleUrls: ['./compare-card.component.scss'],\r\n})\r\nexport class CompareCardComponent {\r\n  @Input() name: ICompare['name'] = 'Marco Rossi';\r\n  @Input() characters: ICompare['characters'] = [];\r\n\r\n  constructor(public elementRef: ElementRef<HTMLElement>) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/styles/colors\";\r\n\r\n.compare-card {\r\n  // max-width: 75%;\r\n  // max-width: 600px;\r\n  background-color: rgb(183, 212, 255, 0.5);\r\n  backdrop-filter: blur(4);\r\n  border: 1px solid $primary;\r\n  border-radius: 5px;\r\n  padding: 35px;\r\n  height: 100%;\r\n  h2 {\r\n    margin-top: 0px;\r\n  }\r\n  &__chars {\r\n    display: flex;\r\n    justify-content: center;\r\n    // align-items: center;\r\n    gap: 20px;\r\n    flex-wrap: wrap;\r\n    min-height: 80%;\r\n\r\n    > * {\r\n      flex: 1 0 30%;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./compare-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"compare-card\">\r\n  <h2>{{ name }}</h2>\r\n  <div class=\"compare-card__chars\">\r\n    <app-single-character-card\r\n      *ngFor=\"let char of characters\"\r\n      [name]=\"char.character[0].name\"\r\n      [img]=\"char.character[0].img\"\r\n      [work]=\"char.title\"\r\n    ></app-single-character-card>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CompareComponent",
            "id": "component-CompareComponent-3047e8cff3c5625e0d72d718f5b931068f54933c4c113c2ba56383903dec19e87d5c1c805359ab2a5cefb001ca80aa08bc115b0af5a8dea06f683e9ded2b1603",
            "file": "src/app/features/doppiatori/view/compare.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-compare",
            "styleUrls": [
                "./compare.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./compare.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cards",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<CompareCardComponent>",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "CompareCardComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "compareTo",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "doppiatori",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ICompare[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "emptySuggestions",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 128
                },
                {
                    "name": "getSuggestions",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 124
                },
                {
                    "name": "grid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'grid'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "gridRowEnd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "isLogged",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "navigateToComparison",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 136
                },
                {
                    "name": "navigateToUserComparison",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 139
                },
                {
                    "name": "showOneQuery",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "showQuery",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "showTwoQuery",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "watchListQuery",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "calculateSpan",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "calculateTotalHeight",
                    "args": [
                        {
                            "name": "arr",
                            "type": "CompareCardComponent[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "arr",
                            "type": "CompareCardComponent[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pickSuggestion",
                    "args": [
                        {
                            "name": "ev",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  OnChanges,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewChildren,\r\n} from '@angular/core';\r\nimport { DoppiatoriService } from '../doppiatori.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { delay, switchMap } from 'rxjs';\r\nimport { LoadingService } from 'src/app/core/services/loading.service';\r\nimport { AuthService } from '../../auth/auth.service';\r\nimport { CompareCardComponent } from '../../characters/compare-card/compare-card.component';\r\n\r\n@Component({\r\n  selector: 'app-compare',\r\n  templateUrl: './compare.component.html',\r\n  styleUrls: ['./compare.component.scss'],\r\n})\r\nexport class CompareComponent implements AfterViewInit, OnChanges {\r\n  doppiatori: ICompare[] = [];\r\n\r\n  title: string = '';\r\n  compareTo: string = '';\r\n\r\n  showOneQuery: string = '';\r\n  showTwoQuery: string = '';\r\n  watchListQuery: string = '';\r\n  showQuery: string = '';\r\n\r\n  isLogged!: boolean;\r\n  isLoading!: boolean;\r\n\r\n  @ViewChildren(CompareCardComponent) cards!: QueryList<CompareCardComponent>;\r\n  @ViewChild('grid') grid!: ElementRef;\r\n  gridRowEnd!: number;\r\n\r\n  constructor(\r\n    private doppiatoriSrv: DoppiatoriService,\r\n    private loadingSrv: LoadingService,\r\n    private authSrv: AuthService,\r\n    private route: ActivatedRoute,\r\n  ) {\r\n    this.route.queryParams\r\n      .pipe(\r\n        switchMap((qp) => {\r\n          this.showOneQuery = qp['title'];\r\n          this.title = qp['title'];\r\n          this.showTwoQuery = qp['compareTo'];\r\n          this.compareTo = qp['compareTo'];\r\n          this.watchListQuery = qp['query'];\r\n          this.showQuery = qp['query'];\r\n          if (!this.watchListQuery && this.compareTo && this.title) {\r\n            return this.doppiatoriSrv.getComparison(qp['title'], qp['compareTo']);\r\n          } else {\r\n            console.log(qp['query']);\r\n            return this.doppiatoriSrv.getUserComparison(qp['query']);\r\n          }\r\n        }),\r\n        switchMap((res) => {\r\n          this.doppiatori = res;\r\n          return this.cards.changes;\r\n        }),\r\n        // delay(100),\r\n      )\r\n      .subscribe((res) => {\r\n        this.calculateSpan();\r\n      });\r\n    this.authSrv.recoverLoggedUser().subscribe((user) => {\r\n      this.isLogged = !!user;\r\n    });\r\n    this.doppiatoriSrv.showOneQuery.subscribe((res) => (this.showOneQuery = res));\r\n    this.doppiatoriSrv.showTwoQuery.subscribe((res) => (this.showTwoQuery = res));\r\n    this.doppiatoriSrv.watchListQuery.subscribe((res) => (this.watchListQuery = res));\r\n    this.loadingSrv.$loading.asObservable().subscribe((val) => (this.isLoading = val));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // this.calculateSpan();\r\n    this.cards.changes.subscribe((cards) => {\r\n      this.calculateSpan();\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    // this.calculateSpan();\r\n  }\r\n\r\n  calculateTotalHeight(arr: CompareCardComponent[]) {\r\n    return arr.reduce((acc, curr, i) => {\r\n      console.log(curr.elementRef.nativeElement);\r\n      const html = curr.elementRef.nativeElement as HTMLElement;\r\n      // if (this.cards.get(i)?.nativeElement) {\r\n      //   this.cards.get(i)!.nativeElement.style.height =\r\n      //     Math.ceil(html.getBoundingClientRect().height) + 'px';\r\n      // }\r\n      return acc + html.getBoundingClientRect().height;\r\n    }, 0);\r\n  }\r\n\r\n  get averageCardHeight() {\r\n    return (\r\n      this.cards.reduce((acc, curr, i) => {\r\n        console.log(curr.elementRef);\r\n        const html = curr.elementRef.nativeElement as HTMLElement;\r\n\r\n        return acc + html.getBoundingClientRect().height;\r\n      }, 0) / this.cards.length\r\n    );\r\n  }\r\n\r\n  calculateSpan() {\r\n    const firstHalf = [...this.cards].slice(0, this.cards.length / 2);\r\n    const secondHalf = [...this.cards].slice(this.cards.length / 2);\r\n    const higher = Math.max(\r\n      this.calculateTotalHeight(firstHalf),\r\n      this.calculateTotalHeight(secondHalf),\r\n    );\r\n    this.gridRowEnd = Math.ceil(higher) + Math.ceil(this.averageCardHeight);\r\n  }\r\n\r\n  getSuggestions = (ev: Event, varName: string) => {\r\n    this.doppiatoriSrv.fetchSuggestions(ev, varName);\r\n  };\r\n\r\n  emptySuggestions = (input: string) => {\r\n    this.doppiatoriSrv.emptySuggestions(input);\r\n  };\r\n\r\n  pickSuggestion(ev: Event) {\r\n    this.doppiatoriSrv.pickSuggestion(ev);\r\n  }\r\n\r\n  navigateToComparison = () => {\r\n    this.doppiatoriSrv.navigateToComparison();\r\n  };\r\n  navigateToUserComparison = () => {\r\n    this.doppiatoriSrv.navigateToUserComparison();\r\n  };\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/styles/colors\";\r\n@mixin multiple-lines {\r\n  flex-direction: column;\r\n  > * {\r\n    width: 100%;\r\n  }\r\n}\r\n:host {\r\n  display: block;\r\n  padding-inline: 50px;\r\n  padding-block: 20px;\r\n  container-type: inline-size;\r\n  .loading__wrap {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 60vh;\r\n  }\r\n  h1 {\r\n    color: $primary;\r\n    span {\r\n      position: relative;\r\n      img {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n  h2 {\r\n    font-weight: normal;\r\n    span {\r\n      font-weight: bold;\r\n      color: $primary;\r\n    }\r\n  }\r\n\r\n  .compare__wrap {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    gap: 20px;\r\n\r\n    &.row {\r\n      flex-direction: row;\r\n      > * {\r\n        flex: 1 1 calc(50% - 20px);\r\n      }\r\n    }\r\n\r\n    &.col {\r\n      display: flex;\r\n      flex-direction: column;\r\n      // max-height: 1000px;\r\n\r\n      > * {\r\n        flex: 1 1 500px;\r\n        max-width: 50%;\r\n        height: fit-content;\r\n      }\r\n    }\r\n  }\r\n  .compare__search {\r\n    display: flex;\r\n    flex-direction: unset;\r\n    gap: 10px;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 20px;\r\n    @container (max-width: 900px) {\r\n      @include multiple-lines;\r\n    }\r\n    @container (max-width: 700px) {\r\n      @include multiple-lines;\r\n    }\r\n    @container (min-width: 701px) and (max-width: 900px) {\r\n      flex-direction: unset;\r\n      > * {\r\n        width: unset;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./compare.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "doppiatoriSrv",
                        "type": "DoppiatoriService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loadingSrv",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authSrv",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "doppiatoriSrv",
                        "type": "DoppiatoriService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loadingSrv",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authSrv",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit",
                "OnChanges"
            ],
            "accessors": {
                "averageCardHeight": {
                    "name": "averageCardHeight",
                    "getSignature": {
                        "name": "averageCardHeight",
                        "type": "",
                        "returnType": "",
                        "line": 103
                    }
                }
            },
            "templateData": "<h1>\r\n  Dove\r\n  <span>\r\n    cazzo\r\n    <img src=\"../../../assets/strike.png\" />\r\n  </span>\r\n  hai sentito questo doppiatore?!\r\n</h1>\r\n<h2>\r\n  <ng-template #userCompare>\r\n    <span>\r\n      {{ showQuery }}\r\n    </span>\r\n    — Doppiatori in comune con la tua watchlist\r\n  </ng-template>\r\n  <ng-container *ngIf=\"title && compareTo; else userCompare\">\r\n    <span>\r\n      {{ title }}\r\n    </span>\r\n    &\r\n    <span>\r\n      {{ compareTo }}\r\n    </span>\r\n    — Doppiatori in comune\r\n  </ng-container>\r\n</h2>\r\n<div class=\"compare__search\">\r\n  <ng-template #userCompareForm>\r\n    <app-suggestion-input\r\n      dataSuggestionsVar=\"suggestions\"\r\n      placeholder=\"Inserisci serie\"\r\n      name=\"watchListQuery\"\r\n      [autocomplete]=\"'off'\"\r\n    >\r\n    </app-suggestion-input>\r\n    <app-button [onClick]=\"navigateToUserComparison\">Cerca</app-button>\r\n  </ng-template>\r\n  <ng-container *ngIf=\"title && compareTo; else userCompareForm\">\r\n    <app-suggestion-input\r\n      dataSuggestionsVar=\"suggestionsOne\"\r\n      placeholder=\"Inserisci serie\"\r\n      name=\"showOneQuery\"\r\n      [autocomplete]=\"'off'\"\r\n    >\r\n    </app-suggestion-input>\r\n\r\n    <app-suggestion-input\r\n      name=\"showTwoQuery\"\r\n      dataSuggestionsVar=\"suggestionsTwo\"\r\n      placeholder=\"Inserisci serie\"\r\n      [autocomplete]=\"'off'\"\r\n    >\r\n    </app-suggestion-input>\r\n    <app-button [onClick]=\"navigateToComparison\">Cerca</app-button>\r\n  </ng-container>\r\n</div>\r\n<h2 *ngIf=\"!isLoading\">({{ doppiatori.length }}) risultati:</h2>\r\n<ng-template #loading>\r\n  <div class=\"loading__wrap\">\r\n    <div class=\"loader\"></div>\r\n  </div>\r\n</ng-template>\r\n<div\r\n  class=\"compare__wrap\"\r\n  #grid\r\n  [ngClass]=\"{\r\n    row: doppiatori.length <= 2,\r\n    col: doppiatori.length > 2,\r\n  }\"\r\n  *ngIf=\"!isLoading; else loading\"\r\n  [style]=\"'max-height:' + gridRowEnd + 'px'\"\r\n>\r\n  <!-- <div class=\"compare-card-wrap\" > -->\r\n    <app-compare-card\r\n    *ngFor=\"let doppiatore of doppiatori\"\r\n      [name]=\"doppiatore.name\"\r\n      [characters]=\"doppiatore.characters\"\r\n    ></app-compare-card>\r\n  <!-- </div> -->\r\n</div>\r\n"
        },
        {
            "name": "ImportTutorialComponent",
            "id": "component-ImportTutorialComponent-21bf1dfe137b169db5ca04d32d83e88f88d32e2619e7fccda9ff32059ee019aa2f56038ec92faf07229cb620d33fad01d53fa3caeed27d8ede5a14fe7d92e457",
            "file": "src/app/features/auth/views/import-tutorial/import-tutorial.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-import-tutorial",
            "styleUrls": [
                "./import-tutorial.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./import-tutorial.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-import-tutorial',\r\n  templateUrl: './import-tutorial.component.html',\r\n  styleUrls: ['./import-tutorial.component.scss'],\r\n})\r\nexport class ImportTutorialComponent  implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/styles/colors\";\r\n:host {\r\n  .tutorial {\r\n    padding-inline: 10%;\r\n    padding-block: 20px;\r\n    .toc {\r\n      width: fit-content;\r\n      border: 1px solid lighten($primary, 40);\r\n      padding-inline-end: 20px;\r\n      padding-block-start: 10px;\r\n      ul {\r\n        list-style: \"🔗\";\r\n        margin-top: 5px;\r\n        a {\r\n          margin-inline-start: 10px;\r\n        }\r\n        li {\r\n          margin-bottom: 5px;\r\n        }\r\n      }\r\n    }\r\n    section {\r\n      padding-left: 30px;\r\n      img {\r\n        width: 70%;\r\n        &[small] {\r\n          width: 40%;\r\n        }\r\n        @media screen and (max-width: 1100px) {\r\n          width: 100%;\r\n          &[small] {\r\n            width: 60%;\r\n          }\r\n        }\r\n        @media screen and (max-width: 760px) {\r\n          &[small] {\r\n            width: 100%;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./import-tutorial.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"tutorial\">\r\n  <h1>Guida all'importazione dei dati</h1>\r\n  <h3>Indice: </h3>\r\n  <div class=\"toc\">\r\n    <ul>\r\n      <li>\r\n        <a [routerLink]=\"[]\" fragment=\"trakt\">Trakt.TV</a>\r\n        <ul>\r\n          <li><a [routerLink]=\"[]\" fragment=\"trakt-1\">1. &nbsp; Effettua il login</a></li>\r\n          <li><a [routerLink]=\"[]\" fragment=\"trakt-2\">2. &nbsp; Vai al tuo profilo</a></li>\r\n          <li>\r\n            <a [routerLink]=\"[]\" fragment=\"trakt-3\">3. &nbsp; Copia il tuo username dall'URL</a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <a [routerLink]=\"[]\" fragment=\"letterboxd\">Letterboxd</a>\r\n        <ul>\r\n          <li><a [routerLink]=\"[]\" fragment=\"letterboxd-1\">1.&nbsp; Esegui il login</a></li>\r\n          <li><a [routerLink]=\"[]\" fragment=\"letterboxd-2\">2.&nbsp; Vai alla pagina delle impostazioni</a></li>\r\n          <li><a [routerLink]=\"[]\" fragment=\"letterboxd-3\">3.&nbsp; Vai alla tab 'Data'</a></li>\r\n          <li><a [routerLink]=\"[]\" fragment=\"letterboxd-4\">4.&nbsp; Scarica i tuoi dati</a></li>\r\n          <li><a [routerLink]=\"[]\" fragment=\"letterboxd-5\">5.&nbsp; Estrai la cartella compressa</a></li>\r\n          <li><a [routerLink]=\"[]\" fragment=\"letterboxd-6\">6.&nbsp; Carica il file watched.csv</a></li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <h2 id=\"trakt\">Trakt.TV</h2>\r\n\r\n  <p>Per eseguire l'import dei dati da Trakt sara' sufficiente inserire il proprio nome utente.</p>\r\n  <p>Il nome utente puo' essere trovato seguendo i seguenti passaggi:</p>\r\n  <h3 id=\"trakt-1\">1. &nbsp; Effettua il login</h3>\r\n  <section>\r\n    <p>Effettua il login su <a href=\"trakt.tv\" target=\"_blank\">Trakt</a></p>\r\n    <img small [src]=\"'https://imgur.com/yHMQv03' | imgurUrl\" alt=\"Schermata di login di trakt\" />\r\n  </section>\r\n  <h3 id=\"trakt-2\">2. &nbsp; Vai al tuo profilo</h3>\r\n  <section>\r\n    <p>Dalla schermata a cui verrai reindirizzato, scegli \"Your profile\"</p>\r\n    <img [src]=\"'https://imgur.com/iqjRjmK' | imgurUrl\" alt=\"Dashboard di trakt\" />\r\n  </section>\r\n  <h3 id=\"trakt-3\">3. &nbsp; Copia il tuo username dall'URL</h3>\r\n  <section>\r\n    <p>Controlla nell'indirizzo della pagina. In fondo all'URL troverai il tuo nome utente.</p>\r\n    <img [src]=\"'https://imgur.com/g9d73yu' | imgurUrl\" alt=\"Indirizzo di trakt con nome utente\" />\r\n  </section>\r\n  <h2 id=\"letterboxd\">Letterboxd</h2>\r\n  <h3 id=\"letterboxd-1\">1.&nbsp; Esegui il login</h3>\r\n  <section>\r\n    <p>Esegui il login su <a href=\"https://letterboxd.com/\" target=\"_blank\">Letterboxd</a></p>\r\n    <img [src]=\"'https://imgur.com/W2l0uRs' | imgurUrl\" alt=\"\" />\r\n  </section>\r\n  <h3 id=\"letterboxd-2\">2.&nbsp; Vai alla pagina delle impostazioni</h3>\r\n  <section>\r\n    <p>Metti il mouse sul tuo nome in alto e seleziona \"Settings\" dal menu che si aprira'.</p>\r\n    <img small [src]=\"'https://imgur.com/pFSBdEO' | imgurUrl\" alt=\"\" />\r\n  </section>\r\n  <h3 id=\"letterboxd-3\">3.&nbsp; Vai alla tab 'Data'</h3>\r\n  <section>\r\n    <p>Tra tutte le opzioni disponibili nella pagina Settings, scegli \"Data\".</p>\r\n    <img [src]=\"'https://imgur.com/dsiWFMW' | imgurUrl\" alt=\"\" />\r\n  </section>\r\n  <h3 id=\"letterboxd-4\">4.&nbsp; Scarica i tuoi dati</h3>\r\n  <section>\r\n    <p>Seleziona \"Export your data\".</p>\r\n    <p>\r\n      Nella finestra di dialogo che si aprira', conferma la tua scelta cliccando nuovamente su\r\n      \"Export your data\"\r\n    </p>\r\n    <img [src]=\"'https://imgur.com/qsmNU8e' | imgurUrl\" alt=\"\" />\r\n  </section>\r\n  <h3 id=\"letterboxd-5\">5.&nbsp; Estrai la cartella compressa</h3>\r\n  <section>\r\n    <p>Una volta completato il download, estrai la cartella compressa (.zip) che hai scaricato.</p>\r\n    <p>Puoi utilizzare programmi come WinRAR, WinZIP, 7Zip o le funzionalita' native di Windows.</p>\r\n    <img small [src]=\"'https://imgur.com/hwHBuo4' | imgurUrl\" alt=\"\" />\r\n  </section>\r\n  <h3 id=\"letterboxd-6\">6.&nbsp; Carica il file watched.csv</h3>\r\n  <section>\r\n    <p>\r\n      Nella tua <a routerLink=\"/auth/user\">pagina profilo</a>, carica il file watched.csv nell'area\r\n      dedicata.\r\n    </p>\r\n    <img [src]=\"'https://imgur.com/u2jsMOs' | imgurUrl\" alt=\"\" />\r\n  </section>\r\n</div>\r\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-5578792ab62f860038fa7603e74a77870c8665687045a823f04ecd65c1b77eb927d0d766686f69cfeb625ad3708de7d1e350b531a42c59080550d160a07c3144",
            "file": "src/app/shared/components/layout/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "accept",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "\"on\" | \"off\"",
                    "decorators": []
                },
                {
                    "name": "autofocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "dataSuggestionsVar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "defaultValue",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "ngModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "onBlur",
                    "defaultValue": "() => 0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "function",
                    "decorators": []
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => 0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "function",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Example'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "validatorFn",
                    "defaultValue": "() => true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "function",
                    "decorators": []
                },
                {
                    "name": "validatorMsg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isValid",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validator",
                    "args": [
                        {
                            "name": "input",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, forwardRef, Input } from '@angular/core';\r\nimport {\r\n  ControlValueAccessor,\r\n  FormsModule,\r\n  NG_VALUE_ACCESSOR,\r\n} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-input',\r\n  templateUrl: './input.component.html',\r\n  styleUrls: ['./input.component.scss'],\r\n  standalone: true,\r\n  imports: [FormsModule, CommonModule],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => InputComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class InputComponent implements ControlValueAccessor {\r\n  writeValue(obj: any): void {\r\n    this.value = obj;\r\n  }\r\n  registerOnChange(fn: any): void {}\r\n  registerOnTouched(fn: any): void {}\r\n  setDisabledState?(isDisabled: boolean): void {}\r\n\r\n  @Input() placeholder: string = 'Example';\r\n  @Input() defaultValue: string | null = null;\r\n  @Input() type: HTMLInputElement['type'] = 'text';\r\n  @Input() name!: HTMLInputElement['name'];\r\n  @Input() onChange: (e: Event, input: string) => void = () => 0;\r\n  @Input() onBlur: (val: string) => void = () => 0;\r\n  @Input() ngModel!: string;\r\n  @Input() autocomplete!: 'on' | 'off';\r\n  @Input() dataSuggestionsVar!: string;\r\n  @Input() value: any;\r\n  @Input() validatorFn: (v: string) => boolean = () => true;\r\n  @Input() validatorMsg!: string;\r\n  @Input() accept!: string;\r\n  @Input() id!: string;\r\n  @Input() autofocus!: boolean;\r\n\r\n  isValid = true;\r\n\r\n  validator(input: HTMLInputElement) {\r\n    this.isValid = this.validatorFn(input.value);\r\n    return this.isValid;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/styles/types\";\r\n@import \"src/styles/colors\";\r\n@import \"src/styles/mixins\";\r\n\r\n.inset-shadow {\r\n  box-shadow: inset 2px 2px 5px 0px rgb(0, 0, 0, 0.08) !important;\r\n  -webkit-box-shadow: inset 2px 2px 5px 0px rgb(0, 0, 0, 0.08) !important;\r\n}\r\n\r\n:host {\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  // padding-block: 2px;\r\n  // background-color: white;\r\n  &:has(::ng-deep button) {\r\n    input {\r\n      border-top-right-radius: 0px !important;\r\n      border-bottom-right-radius: 0px !important;\r\n    }\r\n  }\r\n  & input:focus + ::ng-deep button {\r\n    outline: 2px $accent solid;\r\n  }\r\n  ::ng-deep button {\r\n    @include button($accent);\r\n    aspect-ratio: 1/1;\r\n    width: 51px;\r\n    padding: unset;\r\n    border-top-left-radius: 0px;\r\n    border-bottom-left-radius: 0px;\r\n    position: relative;\r\n    box-shadow: unset;\r\n    box-shadow: inset -5px 2px 5px 0px rgba(0, 0, 0, 0.08) !important;\r\n    -webkit-box-shadow: inset -5px 2px 5px 0px rgba(0, 0, 0, 0.08) !important;\r\n\r\n    ion-icon {\r\n      position: absolute;\r\n      left: 50%;\r\n      top: 50%;\r\n      transform: translate(-50%, -50%);\r\n      width: 20px;\r\n      height: 20px;\r\n    }\r\n  }\r\n  input {\r\n    padding: 15px;\r\n    font-size: $text;\r\n    border-radius: 5px;\r\n    border: none;\r\n    @extend .inset-shadow;\r\n    width: inherit;\r\n    &.invalid {\r\n      outline: 3px solid $accent;\r\n    }\r\n    &:focus {\r\n      outline: 2px solid $accent;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<input\r\n  #input\r\n  [attr.type]=\"type\"\r\n  [attr.placeholder]=\"placeholder\"\r\n  [attr.defaultValue]=\"defaultValue\"\r\n  [attr.name]=\"name\"\r\n  (keyup)=\"onChange($event, dataSuggestionsVar)\"\r\n  (blur)=\"onBlur(dataSuggestionsVar); validator(input)\"\r\n  [(ngModel)]=\"ngModel\"\r\n  [attr.autocomplete]=\"autocomplete\"\r\n  [attr.dataset.suggestion]=\"dataSuggestionsVar\"\r\n  [ngClass]=\"{\r\n    invalid: !isValid,\r\n  }\"\r\n  [attr.accept]=\"accept\"\r\n  [attr.id]=\"id\"\r\n  [value]=\"value\"\r\n  [attr.autofocus]=\"autofocus\"\r\n/>\r\n<small class=\"error\" *ngIf=\"!isValid\">\r\n  {{ validatorMsg }}\r\n</small>\r\n<ng-content></ng-content>\r\n"
        },
        {
            "name": "LandingComponent",
            "id": "component-LandingComponent-9070b8b00d1f548b834184c2afa14d4683149d501c91f2ba652e162b152426e131d7e0e85c16ac01e02d960cc2f9e9d9b74dd580c0d21e69b0cec4bfedc9fd1c",
            "file": "src/app/features/landing/view/landing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-landing",
            "styleUrls": [
                "./landing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./landing.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isLogged",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "navigateToComparison",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "navigateToUserComparison",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "showOneQuery",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "showTwoQuery",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "suggestionsOne",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "suggestionsTwo",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "suggestionsWatchList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "watchListQuery",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { AuthService } from '../../auth/auth.service';\r\nimport { DoppiatoriService } from '../../doppiatori/doppiatori.service';\r\n\r\n@Component({\r\n  selector: 'app-landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.scss'],\r\n})\r\nexport class LandingComponent {\r\n  isLogged!: boolean;\r\n  showOneQuery: string = '';\r\n  showTwoQuery: string = '';\r\n  watchListQuery: string = '';\r\n  suggestionsOne: string[] = [];\r\n  suggestionsTwo: string[] = [];\r\n  suggestionsWatchList: string[] = [];\r\n  constructor(\r\n    private authSrv: AuthService,\r\n    private doppiatoriSrv: DoppiatoriService,\r\n  ) {\r\n    this.authSrv.recoverLoggedUser().subscribe((user) => {\r\n      this.isLogged = !!user;\r\n    });\r\n    this.doppiatoriSrv.showOneQuery.subscribe((res) => (this.showOneQuery = res));\r\n    this.doppiatoriSrv.showTwoQuery.subscribe((res) => (this.showTwoQuery = res));\r\n    this.doppiatoriSrv.watchListQuery.subscribe((res) => (this.watchListQuery = res));\r\n    this.doppiatoriSrv.suggestionsOne.subscribe((res) => (this.suggestionsOne = res));\r\n    this.doppiatoriSrv.suggestionsTwo.subscribe((res) => (this.suggestionsTwo = res));\r\n    this.doppiatoriSrv.suggestionsWatchList.subscribe((res) => (this.suggestionsWatchList = res));\r\n  }\r\n\r\n  navigateToComparison = () => {\r\n    this.doppiatoriSrv.navigateToComparison();\r\n  };\r\n\r\n  navigateToUserComparison = () => {\r\n    this.doppiatoriSrv.navigateToUserComparison();\r\n  };\r\n\r\n  logout() {\r\n    this.authSrv.logout();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/styles/types\";\r\n@import \"src/styles/colors\";\r\n@mixin multiple-lines {\r\n  flex-direction: column;\r\n  > * {\r\n    width: 100%;\r\n  }\r\n}\r\n:host {\r\n  display: block;\r\n  min-height: 100vh;\r\n  container-type: inline-size;\r\n  .landing {\r\n    height: 100vh;\r\n    padding: 100px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    @container (max-width: 900px) {\r\n      padding-inline: 5%;\r\n    }\r\n\r\n    &__wrap {\r\n      width: 60%;\r\n\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 20px;\r\n      @container (max-width: 900px) {\r\n        width: 100%;\r\n      }\r\n      .landing__form {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 10px;\r\n\r\n        @container (max-width: 1250px) {\r\n          @include multiple-lines;\r\n        }\r\n        @container (max-width: 700px) {\r\n          @include multiple-lines;\r\n        }\r\n        @container (min-width: 701px) and (max-width: 900px) {\r\n          flex-direction: unset;\r\n          > * {\r\n            width: unset;\r\n          }\r\n        }\r\n      }\r\n\r\n      img {\r\n        width: 70%;\r\n        @container (max-width: 700px) {\r\n          width: 100%;\r\n        }\r\n      }\r\n      p {\r\n        width: 80%;\r\n        font-size: $text;\r\n        color: $textColor;\r\n        line-height: 1.5;\r\n        @container (max-width: 700px) {\r\n          width: 100%;\r\n        }\r\n      }\r\n      app-input {\r\n        position: relative;\r\n      }\r\n      &-search {\r\n        display: flex;\r\n        gap: 20px;\r\n        flex-wrap: wrap;\r\n        app-suggestion-input {\r\n          width: 60%;\r\n          min-width: 300px;\r\n\r\n        }\r\n        @media screen and (max-width: 480px) {\r\n          app-button, app-suggestion-input {\r\n              width: 100%;\r\n\r\n            }\r\n          }\r\n      }\r\n    }\r\n    &__img {\r\n      width: 40%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      position: relative;\r\n\r\n      @container (max-width: 900px) {\r\n        display: none;\r\n      }\r\n      img {\r\n        width: 90%;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./landing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authSrv",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "doppiatoriSrv",
                        "type": "DoppiatoriService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "authSrv",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "doppiatoriSrv",
                        "type": "DoppiatoriService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"landing\">\r\n  <div class=\"landing__wrap\">\r\n    <img src=\"../../../assets/titolo-lg.png\" alt=\"\" />\r\n    <div class=\"landing__wrap-compare\">\r\n      <p>Cerca due serie per scoprire quali doppiatori hanno in comune</p>\r\n      <div class=\"landing__form\">\r\n        <app-suggestion-input\r\n          name=\"showOneQuery\"\r\n          dataSuggestionsVar=\"suggestionsOne\"\r\n          placeholder=\"Inserisci serie\"\r\n          [autocomplete]=\"'off'\"\r\n        >\r\n        </app-suggestion-input>\r\n\r\n        <app-suggestion-input\r\n          name=\"showTwoQuery\"\r\n          dataSuggestionsVar=\"suggestionsTwo\"\r\n          placeholder=\"Inserisci serie\"\r\n          [autocomplete]=\"'off'\"\r\n        >\r\n        </app-suggestion-input>\r\n\r\n        <app-button [onClick]=\"navigateToComparison\">Cerca</app-button>\r\n      </div>\r\n    </div>\r\n    <section *ngIf=\"isLogged; else notLogged\">\r\n      <p>\r\n        Inserisci il nome della serie che stai guardando e scopri in quali serie\r\n        potresti averlo sentito:\r\n      </p>\r\n      <div class=\"landing__wrap-search\">\r\n        <app-suggestion-input\r\n          name=\"watchListQuery\"\r\n          placeholder=\"Inserisci un titolo\"\r\n          dataSuggestionsVar=\"suggestionsWatchList\"\r\n          [autocomplete]=\"'off'\"\r\n        >\r\n        </app-suggestion-input>\r\n\r\n        <app-button [onClick]=\"navigateToUserComparison\">Cerca</app-button>\r\n      </div>\r\n    </section>\r\n    <ng-template #notLogged>\r\n      <p>\r\n        Oppure <a [routerLink]=\"['/auth']\">effettua il login</a> per scoprire in\r\n        quali serie potresti aver sentito <i> quel </i> doppiatore\r\n      </p>\r\n    </ng-template>\r\n  </div>\r\n  <div class=\"landing__img\">\r\n    <img src=\"../../../assets/foto.png\" alt=\"\" />\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "NavbarComponent",
            "id": "component-NavbarComponent-14918d8af0b0471a043d5b057c9cb702766db4c1190ca4579606fb06fdd43413138ad50aca711eb74399612d66357a20ff04eedb4f9ab3ba019848a291a9a8ec",
            "file": "src/app/shared/components/layout/navbar/navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navbar",
            "styleUrls": [
                "./navbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isLogged",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "navigateToSearch",
                    "args": [
                        {
                            "name": "ev",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/features/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss'],\r\n})\r\nexport class NavbarComponent {\r\n  isLogged: boolean = false;\r\n  constructor(\r\n    private authSrv: AuthService,\r\n    private router: Router,\r\n  ) {\r\n    this.authSrv.$user.subscribe((user) => (this.isLogged = !!user));\r\n  }\r\n\r\n  navigateToSearch(ev: Event) {\r\n    ev.preventDefault();\r\n    const fd = new FormData(ev.target as HTMLFormElement);\r\n    const query = fd.get('query');\r\n    this.router.navigate(['/works'], {\r\n      queryParams: { query },\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/styles/types\";\r\n@import \"/src/styles/colors\";\r\n.nav {\r\n  height: 50px;\r\n  backdrop-filter: blur(10px);\r\n  background-color: transparentize($primary, 0.9);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 100;\r\n\r\n  font-size: $text;\r\n\r\n  padding: 40px;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  &__user-area, &__global {\r\n    display: flex;\r\n    gap: 20px;\r\n    align-items: center;\r\n  }\r\n}\r\n",
                    "styleUrl": "./navbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authSrv",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "authSrv",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<nav class=\"nav\">\r\n  <div class=\"nav__global\">\r\n    <a class=\"nav__item\" routerLink=\"/\"> Home</a>\r\n    <form (submit)=\"navigateToSearch($event)\">\r\n      <app-input\r\n        dataSuggestionsVar=\"suggestions\"\r\n        placeholder=\"Inserisci un titolo...\"\r\n        autocomplete=\"off\"\r\n        name=\"query\"\r\n      >\r\n        <button><ion-icon name=\"search-outline\"></ion-icon></button>\r\n      </app-input>\r\n    </form>\r\n  </div>\r\n  <div class=\"nav__user-area\" *ngIf=\"!isLogged; else profile\">\r\n    <a\r\n      routerLink=\"auth\"\r\n      [queryParams]=\"{\r\n        signup: false,\r\n      }\"\r\n      class=\"nav__item\"\r\n      >Login</a\r\n    >\r\n    <a\r\n      routerLink=\"auth\"\r\n      [queryParams]=\"{\r\n        signup: true,\r\n      }\"\r\n      class=\"nav__item\"\r\n      >Registrati</a\r\n    >\r\n  </div>\r\n  <ng-template #profile>\r\n    <a routerLink=\"auth/user\">Profile</a>\r\n  </ng-template>\r\n</nav>\r\n"
        },
        {
            "name": "PaginationComponent",
            "id": "component-PaginationComponent-fa67cc2762b102b8aae922e279da8d0d6d5cde1992fc5bf13d8c22239f1fc82fad25d73690276086085483ec1527f30374eb50368608d174a34202572a4c9065",
            "file": "src/app/shared/components/layout/pagination/pagination.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pagination",
            "styleUrls": [
                "./pagination.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pagination.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "() => null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "function",
                    "decorators": []
                },
                {
                    "name": "pages",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "pagesArr",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "undefined[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { AfterViewInit, Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: ['./pagination.component.scss'],\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n  @Input() pages: number = 1;\r\n  @Input() onClick: (page: number) => void = () => null;\r\n  pagesArr: null[] = [];\r\n  // constructor() {\r\n  //   this.pagesArr = new Array(this.pages - 1);\r\n  // }\r\n\r\n  ngOnInit() {\r\n    this.pagesArr = new Array(this.pages - 1);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./pagination.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<button *ngFor=\"let page of pagesArr;  index as i\" (click)=\"onClick(i+1)\">{{i+1}}</button>\r\n"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-751e031d1a9a63f023abce24f04756adeec7cfaa82abd3fdf048d3a406ff91f99035c435defbe814b52a2a628cd3bb66312a42320f399dbfa9f4043cdee20976",
            "file": "src/app/features/auth/views/profile/profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profile",
            "styleUrls": [
                "./profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "importTrakt",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "input",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputComponent",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'appInput'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isSavingUser",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "notFound",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "query",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "suggestions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "username",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "addToSeen",
                    "args": [
                        {
                            "name": "og",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "og",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editMe",
                    "args": [
                        {
                            "name": "ev",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "importLetterboxd",
                    "args": [
                        {
                            "name": "ev",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleFind",
                    "args": [
                        {
                            "name": "show",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "show",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewChildren,\r\n} from '@angular/core';\r\nimport { AuthService } from '../../auth.service';\r\nimport { InputComponent } from 'src/app/shared/components/layout/input/input.component';\r\nimport { LoadingService } from 'src/app/core/services/loading.service';\r\nimport { DoppiatoriService } from 'src/app/features/doppiatori/doppiatori.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss'],\r\n})\r\nexport class ProfileComponent {\r\n  //!import\r\n  username: string = '';\r\n  isLoading!: boolean;\r\n  notFound: string[] = [];\r\n  suggestions: string[] = [];\r\n  query: string = '';\r\n\r\n  selected!: string;\r\n\r\n  @ViewChild('appInput') input!: InputComponent;\r\n\r\n  //!profile edit\r\n  user!: User;\r\n  isSavingUser: boolean = false;\r\n\r\n  constructor(\r\n    private authSrv: AuthService,\r\n    private loadingSrv: LoadingService,\r\n    private doppiatoriSrv: DoppiatoriService,\r\n  ) {\r\n    this.loadingSrv.$loading.asObservable().subscribe((val) => {\r\n      this.isLoading = val;\r\n    });\r\n    this.authSrv.$user.asObservable().subscribe((u) => {\r\n      if (u) this.user = u;\r\n    });\r\n    this.doppiatoriSrv.suggestions.subscribe((s) => (this.suggestions = s));\r\n    this.doppiatoriSrv.query.subscribe((q) => (this.query = q));\r\n  }\r\n\r\n  //!import\r\n  importTrakt = (ev: Event) => {\r\n    const fd = new FormData(ev.target as HTMLFormElement);\r\n    this.authSrv.importTrakt(fd.get('username') as string).subscribe((nf) => {\r\n      this.notFound = nf.titles;\r\n    });\r\n  };\r\n\r\n  importLetterboxd(ev: Event) {\r\n    const target = ev.target as HTMLFormElement;\r\n    const fd = new FormData(target);\r\n    this.authSrv.importLetterboxd(fd).subscribe((nf) => {\r\n      this.notFound = nf.titles;\r\n    });\r\n  }\r\n\r\n  toggleFind(show: string) {\r\n    this.selected = show;\r\n    setTimeout(() => {\r\n      if (this.input) {\r\n        this.input.value = show;\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  addToSeen(og: string) {\r\n    this.authSrv.addToSeen(this.query).subscribe(() => {\r\n      const found = this.notFound.findIndex((title) => title === og);\r\n      if (found > -1) {\r\n        this.notFound.splice(found, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  //! edit profile\r\n\r\n  editMe(ev: Event) {\r\n    this.isSavingUser = true;\r\n    const fd = new FormData(ev.target as HTMLFormElement);\r\n\r\n    this.authSrv.editMe(fd).subscribe(() => {\r\n      this.isSavingUser = false;\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/styles/colors\";\r\n.profile {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 40px;\r\n\r\n  & > * {\r\n    flex: 1 0 calc(50% - 40px);\r\n    padding-inline: 100px;\r\n  }\r\n  &__info {\r\n    app-input {\r\n      width: 100%;\r\n      margin-bottom: 20px;\r\n    }\r\n    app-button {\r\n      width: 100%;\r\n      ::ng-deep button {\r\n        display: flex;\r\n        justify-content: center;\r\n\r\n      }\r\n    }\r\n    &-name {\r\n      display: flex;\r\n      gap: 20px;\r\n    }\r\n  }\r\n  &__import {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .input-group {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 20px;\r\n  }\r\n  .import__area {\r\n    position: relative;\r\n    .overlay {\r\n      background-color: transparentize(lighten($primary, 50), 0.6);\r\n      position: absolute;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      small {\r\n        padding: 5px;\r\n        background-color: white;\r\n      }\r\n    }\r\n  }\r\n  ul {\r\n    list-style: none;\r\n    padding-inline-start: 0px;\r\n    li {\r\n      padding: 10px;\r\n      border-bottom: 1px solid lighten($primary, 20);\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      position: relative;\r\n      span {\r\n        padding-inline-start: 8px;\r\n      }\r\n      button {\r\n        background-color: $primary;\r\n        color: white;\r\n        padding: 8px 16px;\r\n        border: none;\r\n        border-radius: 5px;\r\n        font-size: 15px;\r\n        cursor: pointer;\r\n        &:hover {\r\n          background-color: lighten($primary, 5%);\r\n        }\r\n        &:active {\r\n          transform: translate(0px, 2px);\r\n          box-shadow: none;\r\n          -webkit-box-shadow: none;\r\n        }\r\n        &.save {\r\n          background-color: $accent;\r\n          color: black;\r\n          &:hover {\r\n            background-color: lighten($accent, 5%);\r\n          }\r\n          &:active {\r\n            transform: translate(0px, 2px);\r\n            box-shadow: none;\r\n            -webkit-box-shadow: none;\r\n          }\r\n        }\r\n      }\r\n      ::ng-deep input {\r\n        font-size: 16px;\r\n        padding: 8px;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./profile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authSrv",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loadingSrv",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "doppiatoriSrv",
                        "type": "DoppiatoriService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "authSrv",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loadingSrv",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "doppiatoriSrv",
                        "type": "DoppiatoriService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"profile\">\r\n  <form class=\"profile__info\" (submit)=\"editMe($event)\">\r\n    <h2>Modifica il tuo profilo</h2>\r\n    <app-input type=\"email\" name=\"email\" placeholder=\"Email\" [ngModel]=\"user.email\"></app-input>\r\n    <div class=\"profile__info-name\">\r\n      <app-input type=\"text\" name=\"name\" placeholder=\"Nome\" [ngModel]=\"user.name\"></app-input>\r\n      <app-input\r\n        type=\"text\"\r\n        name=\"lastName\"\r\n        placeholder=\"Cognome\"\r\n        [ngModel]=\"user.lastName\"\r\n      ></app-input>\r\n    </div>\r\n    <app-button [disabled]=\"isLoading && isSavingUser\">\r\n      <span *ngIf=\"!(isLoading && isSavingUser); else loaderUser\">Save</span>\r\n      <ng-template #loaderUser>\r\n        <div class=\"loader\"></div>\r\n      </ng-template>\r\n    </app-button>\r\n  </form>\r\n  <div class=\"profile__import\">\r\n    <h2>Importa i film e le serie viste</h2>\r\n    <a routerLink=\"/user/tutorial\">Serve aiuto?</a>\r\n    <div class=\"import__area\">\r\n      <h3>Trakt.tv</h3>\r\n      <form class=\"input-group\" (submit)=\"importTrakt($event)\">\r\n        <app-input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username Trakt.TV\"\r\n          [ngModel]=\"username\"\r\n        ></app-input>\r\n        <app-button>Save</app-button>\r\n      </form>\r\n\r\n      <h3>Letterboxd</h3>\r\n      <form class=\"input-group\" (submit)=\"importLetterboxd($event)\">\r\n        <app-input type=\"file\" name=\"file\" accept=\".csv\"></app-input>\r\n        <app-button>Save</app-button>\r\n      </form>\r\n      <div class=\"overlay\" *ngIf=\"isLoading && !isSavingUser\">\r\n        <div class=\"spinner\"></div>\r\n        <small\r\n          >Se hai visto tanti film potrebbe volerci un pochino di tempo... Abbi pazienza!</small\r\n        >\r\n      </div>\r\n    </div>\r\n    <div class=\"not-found\" *ngIf=\"notFound.length > 0\">\r\n      <h3>({{ notFound.length }}) elementi non trovati</h3>\r\n      <ul>\r\n        <li *ngFor=\"let show of notFound\">\r\n          <span *ngIf=\"selected !== show\">{{ show }}</span>\r\n          <app-suggestion-input\r\n            *ngIf=\"selected === show\"\r\n            name=\"query\"\r\n            dataSuggestionsVar=\"suggestions\"\r\n            placeholder=\"Serie, film o videogioco...\"\r\n            [autocomplete]=\"'off'\"\r\n            [autofocus]=\"true\"\r\n            [id]=\"show\"\r\n            #appInput\r\n          >\r\n          </app-suggestion-input>\r\n          <button *ngIf=\"selected !== show\" (click)=\"toggleFind(show)\" class=\"find\">Find</button>\r\n          <button *ngIf=\"selected === show\" class=\"save\" (click)=\"addToSeen(show)\">Save</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-ab3d72b6055cd3e02b8aa456f83a7f9c589f25d29bda097fcbbf7a2c9fefdccf758fb9bd61799985257b8c9292e7ec253d217c8857e5ee138b5103bae3cded96",
            "file": "src/app/features/works/search/search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search",
            "styleUrls": [
                "./search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isLoading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "pages",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "query",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "total",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "works",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IWork[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "searchWork",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Route, Router } from '@angular/router';\r\nimport { WorkService } from '../work.service';\r\nimport { catchError, of, switchMap } from 'rxjs';\r\nimport { LoadingService } from 'src/app/core/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss'],\r\n})\r\nexport class SearchComponent {\r\n  query!: string | null;\r\n  works: IWork[] = [];\r\n  pages: number = 0;\r\n  total: number = 0;\r\n  isLoading: boolean = true;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private worksSrv: WorkService,\r\n    private loadingSrv: LoadingService,\r\n  ) {\r\n    this.searchWork = this.searchWork.bind(this);\r\n    this.loadingSrv.$loading.subscribe((res) => {\r\n      this.isLoading = res;\r\n    });\r\n    this.route.queryParamMap\r\n      .pipe(\r\n        switchMap((params) => {\r\n          this.loadingSrv.setLoading = true;\r\n          this.query = params.get('query');\r\n          if (this.query !== null) return this.worksSrv.getWorks(this.query);\r\n          else throw new Error('Query non valida o assente');\r\n        }),\r\n        switchMap(() => this.worksSrv.works),\r\n        switchMap((works) => {\r\n          this.works = works;\r\n          return this.worksSrv.pages;\r\n        }),\r\n        switchMap((pages) => {\r\n          this.pages = pages;\r\n          return this.worksSrv.total;\r\n        }),\r\n      )\r\n      .subscribe((res) => {\r\n        this.total = res;\r\n      });\r\n  }\r\n\r\n  searchWork(page: number) {\r\n    if (this.query) this.worksSrv.getWorks(this.query, page).subscribe();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n  padding-inline: 50px;\r\n  padding-block: 20px;\r\n  @media screen and (max-width: 1180px) {\r\n    padding-inline: 100px;\r\n    ::ng-deep app-card {\r\n      flex: 1 0 calc(50% - 20px);\r\n      max-width: 400px;\r\n    }\r\n  }\r\n  .cards {\r\n    display: flex;\r\n    gap: 20px;\r\n    flex-wrap: wrap;\r\n    // justify-content: space-evenly;\r\n    container-type: inline-size;\r\n  }\r\n}\r\n",
                    "styleUrl": "./search.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "worksSrv",
                        "type": "WorkService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loadingSrv",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "worksSrv",
                        "type": "WorkService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loadingSrv",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<h1 *ngIf=\"!isLoading\">{{ query }} — ({{ total }}) risultati</h1>\r\n<div *ngIf=\"isLoading; else cards\" class=\"loader\"></div>\r\n<ng-template #cards>\r\n  <div class=\"cards\">\r\n    <app-card *ngFor=\"let work of works\" [work]=\"work\"> </app-card>\r\n  </div>\r\n  <app-pagination [pages]=\"pages\" [onClick]=\"searchWork\"></app-pagination>\r\n</ng-template>\r\n"
        },
        {
            "name": "SingleCharacterCardComponent",
            "id": "component-SingleCharacterCardComponent-06e113cd896eddab3fe4495c88226b2c7f77b3c8836e706b66d7d5da74fd0ac8133c181f50c46b0f556ca6d07816abfca35db283d5f0ac89a606efe0f0a610c9",
            "file": "src/app/features/characters/single-character-card/single-character-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-single-character-card",
            "styleUrls": [
                "./single-character-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./single-character-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "img",
                    "defaultValue": "'https://source.boringavatars.com/beam/120/Mario Rossi?colors=EFCA08,4A6FA5'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "'Marco Rossi'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "work",
                    "defaultValue": "'Work'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-single-character-card',\r\n  templateUrl: './single-character-card.component.html',\r\n  styleUrls: ['./single-character-card.component.scss'],\r\n})\r\nexport class SingleCharacterCardComponent {\r\n  @Input() name?: string = 'Marco Rossi';\r\n  @Input()\r\n  img?: string = 'https://source.boringavatars.com/beam/120/Mario Rossi?colors=EFCA08,4A6FA5';\r\n  @Input() work: string = 'Work';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/styles/colors\";\r\n@import \"/src/styles/types\";\r\n:host {\r\n  // height: 100%;\r\n  .card {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    background-color: rgb(255, 255, 255, 0.4);\r\n    min-width: 150px;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 20px;\r\n    border-radius: 5px;\r\n    border: 1px solid white;\r\n    padding-inline: 5px;\r\n    padding-block: 10px;\r\n    &__img {\r\n      width: 35%;\r\n      max-width: 150px;\r\n      aspect-ratio: 1/1;\r\n      border-radius: 50%;\r\n      position: relative;\r\n      img {\r\n        width: 100%;\r\n        aspect-ratio: 1/1;\r\n        object-fit: cover;\r\n        z-index: 10;\r\n        position: relative;\r\n        border-radius: 50%;\r\n      }\r\n      &::before {\r\n        $offset: 10px;\r\n\r\n        //make into a circle\r\n        display: block;\r\n        width: calc(100% + $offset);\r\n        aspect-ratio: 1/1;\r\n        border-radius: 50%;\r\n\r\n        //move to center\r\n        transform: translate(calc($offset / -2), calc($offset / -2));\r\n\r\n        //general styling\r\n        background-color: $accent;\r\n\r\n        //position and zindex\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n\r\n        z-index: 0;\r\n      }\r\n    }\r\n    h3 {\r\n      margin: 0;\r\n      text-align: center;\r\n      min-height: calc(1.17em * 2);\r\n    }\r\n    h4 {\r\n      width: 80%;\r\n      text-wrap: nowrap;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      font-size: $body;\r\n      margin: 0;\r\n      text-align: center;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./single-character-card.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"card\">\r\n  <div class=\"card__img\">\r\n    <img [src]=\"img\" [alt]=\"name\" />\r\n  </div>\r\n  <h3 class=\"card__name\">{{ name }}</h3>\r\n  <h4>{{ work }}</h4>\r\n</div>\r\n"
        },
        {
            "name": "SuggestionInputComponent",
            "id": "component-SuggestionInputComponent-1de96d81e8e7f5dc0473ecfde0657289983330a30c83768e07243e0972fc3f55724c6aff94ceedec4ce4cddd76826811b3714e25e44d1051b578ad954f465fbc",
            "file": "src/app/shared/components/layout/suggestion-input/suggestion-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-suggestion-input",
            "styleUrls": [
                "./suggestion-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./suggestion-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"on\" | \"off\"",
                    "decorators": []
                },
                {
                    "name": "autofocus",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "dataSuggestionsVar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "emptySuggestions",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "getSuggestions",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "input",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputComponent",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'appInput'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "pickSuggestion",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "query",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "shouldShow",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "suggestions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "InputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { InputComponent } from '../input/input.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DoppiatoriService } from 'src/app/features/doppiatori/doppiatori.service';\r\n\r\n@Component({\r\n  selector: 'app-suggestion-input',\r\n  templateUrl: './suggestion-input.component.html',\r\n  styleUrls: ['./suggestion-input.component.scss'],\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, InputComponent],\r\n})\r\nexport class SuggestionInputComponent implements OnInit {\r\n  [key: string]: any;\r\n  @Input() dataSuggestionsVar!: string;\r\n  @Input() placeholder!: string;\r\n  @Input() autocomplete!: 'on' | 'off';\r\n  @Input() autofocus: boolean = false;\r\n  @Input() id!: string;\r\n  @Input() name!: string;\r\n\r\n  @ViewChild('appInput') input!: InputComponent;\r\n\r\n  suggestions: string[] = [];\r\n  query: string = '';\r\n\r\n  constructor(private doppiatoriSrv: DoppiatoriService) {\r\n    this.doppiatoriSrv.suggestions.subscribe((s) => (this.suggestions = s));\r\n    this.doppiatoriSrv.query.subscribe((q) => (this.query = q));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.doppiatoriSrv[this.dataSuggestionsVar].subscribe(\r\n      (res: string[]) => (this.suggestions = res),\r\n    );\r\n  }\r\n  emptySuggestions = () => {\r\n    this.doppiatoriSrv.emptySuggestions(this.dataSuggestionsVar);\r\n  };\r\n  pickSuggestion = (ev: Event) => {\r\n    const picked = this.doppiatoriSrv.pickSuggestion(ev);\r\n    this.input.value = picked;\r\n    setTimeout(() => {\r\n      this.emptySuggestions();\r\n    }, 500);\r\n  };\r\n  getSuggestions = (ev: Event) => {\r\n    this.doppiatoriSrv.fetchSuggestions(ev, this.dataSuggestionsVar);\r\n  };\r\n  shouldShow = () => {\r\n    return this.suggestions.length > 0;\r\n  };\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/styles/types\";\r\n@import \"/src/styles/colors\";\r\n:host {\r\n  display: inline-block;\r\n  app-input {\r\n    width: 100%;\r\n  }\r\n  ::ng-deep app-input {\r\n    display: unset;\r\n  }\r\n  ::ng-deep .search__suggestion {\r\n    position: absolute;\r\n    left: 0;\r\n    z-index: 1000;\r\n    background-color: rgb(255, 255, 255, 0.4);\r\n    backdrop-filter: blur(5px);\r\n    border: 1px solid white;\r\n    margin-top: 5px;\r\n    box-shadow: 2px 2px 5px 0 rgb(0, 0, 0, 0.1);\r\n    -webkit-box-shadow: 2px 2px 5px 0 rgb(0, 0, 0, 0.1);\r\n    &--first,\r\n    &--second,\r\n    &--watchList {\r\n      width: 100%;\r\n      // min-height: 100px;\r\n      padding: 10px 15px;\r\n      transition: 0.2s;\r\n      &:hover {\r\n        background-color: lighten($primary, 25%);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./suggestion-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "doppiatoriSrv",
                        "type": "DoppiatoriService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "doppiatoriSrv",
                        "type": "DoppiatoriService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-input\r\n  [name]=\"name\"\r\n  dataSuggestionsVar=\"suggestions\"\r\n  placeholder=\"Serie, film o videogioco...\"\r\n  [onChange]=\"getSuggestions\"\r\n  [onBlur]=\"emptySuggestions\"\r\n  [autocomplete]=\"'off'\"\r\n  [autofocus]=\"true\"\r\n  [id]=\"id\"\r\n  #appInput\r\n>\r\n  <div class=\"search__suggestion\" *ngIf=\"shouldShow()\">\r\n    <div\r\n      class=\"search__suggestion--first\"\r\n      *ngFor=\"let sugg of suggestions\"\r\n      [id]=\"name\"\r\n      (click)=\"pickSuggestion($event)\"\r\n    >\r\n      {{ sugg }}\r\n    </div>\r\n  </div>\r\n</app-input>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-5e7491655440f01efe08ef23a98f2ca7d6322f70e14ecf2481932877d525167db28fa65b8b0dcb257f1816b9bd2d2f0da4361ec97908fcf95245ed90a1e8ef7d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgIconsModule } from '@ng-icons/core';\r\nimport { ionClose, ionEye, ionEyeOff, ionHomeOutline, ionSearch } from '@ng-icons/ionicons';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { CharacterModule } from './features/characters/character.module';\r\nimport { AuthModule } from './features/auth/auth.module';\r\nimport { LandingModule } from './features/landing/landing.module';\r\nimport { DoppiatoriModule } from './features/doppiatori/doppiatori.module';\r\nimport { NavbarComponent } from './shared/components/layout/navbar/navbar.component';\r\nimport { AlertComponent } from './shared/components/feedback/alert/alert.component';\r\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\r\nimport { InputComponent } from './shared/components/layout/input/input.component';\r\nimport { WorksModule } from './features/works/works.module';\r\nimport { CardComponent } from './shared/components/layout/card/card.component';\r\nimport { ButtonComponent } from './shared/components/layout/button/button.component';\r\nimport { TokenInterceptor } from './core/interceptors/token.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, NavbarComponent, AlertComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n\r\n    InputComponent,\r\n    ButtonComponent,\r\n    NgIconsModule.withIcons({ ionHomeOutline, ionClose, ionSearch, ionEye, ionEyeOff }),\r\n    IonicModule.forRoot({}),\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: ErrorInterceptor,\r\n      multi: true,\r\n    },\r\n    {\r\n      useClass: TokenInterceptor,\r\n      provide: HTTP_INTERCEPTORS,\r\n      multi: true,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "ErrorInterceptor"
                        },
                        {
                            "name": "TokenInterceptor"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AlertComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "NavbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "InputComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-21bbf82c9514495723f8364c38a66c23bdbaa086ec53adb0668e5fcd2e7fc1b8cdc67743851febfc091e7568ccf9e407a63863c69e2c25880c306a43a743d8be",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { workGuard } from './features/works/work.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'auth',\r\n    loadChildren: () => \"import('./features/auth/auth.module').then((c) => c.AuthModule)\",\r\n  },\r\n  {\r\n    path: 'landing',\r\n    loadChildren: () => \"import('./features/landing/landing.module').then((c) => c.LandingModule)\",\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'landing',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'compare',\r\n    loadChildren: () =>\r\n      \"import('./features/doppiatori/doppiatori.module').then((c) => c.DoppiatoriModule)\",\r\n  },\r\n  {\r\n    path: 'works',\r\n    loadChildren: () => \"import('./features/works/works.module').then((c) => c.WorksModule)\",\r\n    canActivate: [workGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { anchorScrolling: 'enabled' })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthModule",
            "id": "module-AuthModule-c38ff9a8a70baa4a8f4075a328996080d878a167f5be17c63ce83a670ea1a9401a469514ed2732f298f406281b277bbd004a4d37d62424712c22a9c4cb47350e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthComponent } from './views/auth/auth.component';\r\nimport { ProfileComponent } from './views/profile/profile.component';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { InputComponent } from 'src/app/shared/components/layout/input/input.component';\r\nimport { SuggestionInputComponent } from 'src/app/shared/components/layout/suggestion-input/suggestion-input.component';\r\nimport { ButtonComponent } from 'src/app/shared/components/layout/button/button.component';\r\nimport { ImgurUrlPipe } from 'src/app/shared/pipes/imgur-url.pipe';\r\nimport { ImportTutorialComponent } from './views/import-tutorial/import-tutorial.component';\r\n\r\n@NgModule({\r\n  declarations: [AuthComponent, ProfileComponent, ImportTutorialComponent],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    AuthRoutingModule,\r\n    InputComponent,\r\n    SuggestionInputComponent,\r\n    ButtonComponent,\r\n    ImgurUrlPipe,\r\n  ],\r\n  providers: [],\r\n})\r\nexport class AuthModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthComponent"
                        },
                        {
                            "name": "ImportTutorialComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AuthRoutingModule"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ImgurUrlPipe"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "SuggestionInputComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthRoutingModule",
            "id": "module-AuthRoutingModule-3d69546508fb570b5047d470c04a730c3c998993c06a8efe338db10e082369c47f7b00cc4af98b953ea1f8f192026fe6b234edf9b3c4b482e32329b64c619cde",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/auth/auth-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthComponent } from './views/auth/auth.component';\r\nimport { ProfileComponent } from './views/profile/profile.component';\r\nimport { ImportTutorialComponent } from './views/import-tutorial/import-tutorial.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthComponent,\r\n  },\r\n  {\r\n    path: 'user',\r\n    component: ProfileComponent,\r\n  },\r\n  {\r\n    path: 'user/tutorial',\r\n    component: ImportTutorialComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CharacterModule",
            "id": "module-CharacterModule-0fc8bb22c71d6b2d380951c8f02bb986880c7a31fefe0a6d956f619826d7537c98557d4f3d542cbaa4f1ce060a0fa6091e5335fdc768462b139a01b05de32dac",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/characters/character.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CompareCardComponent } from './compare-card/compare-card.component';\r\nimport { SingleCharacterCardComponent } from './single-character-card/single-character-card.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [CompareCardComponent, SingleCharacterCardComponent],\r\n  imports: [CommonModule, HttpClientModule],\r\n  exports: [CompareCardComponent, SingleCharacterCardComponent],\r\n})\r\nexport class CharacterModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CompareCardComponent"
                        },
                        {
                            "name": "SingleCharacterCardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CompareCardComponent"
                        },
                        {
                            "name": "SingleCharacterCardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DoppiatoriModule",
            "id": "module-DoppiatoriModule-eba21b1d1ee794997aaf813870df61e3394dcb3911af0cd14a2657925148e7c8917836464a86eea5f257b097d9c2ca1f54c31551eb97676ea251e4ea681532a8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/doppiatori/doppiatori.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CompareComponent } from './view/compare.component';\r\nimport { DoppiatoriRoutingModule } from './doppiatori-routing.module';\r\nimport { CharacterModule } from '../characters/character.module';\r\nimport { ButtonComponent } from 'src/app/shared/components/layout/button/button.component';\r\nimport { InputComponent } from 'src/app/shared/components/layout/input/input.component';\r\nimport { SuggestionInputComponent } from 'src/app/shared/components/layout/suggestion-input/suggestion-input.component';\r\n\r\n@NgModule({\r\n  declarations: [CompareComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DoppiatoriRoutingModule,\r\n    CharacterModule,\r\n    ButtonComponent,\r\n    InputComponent,\r\n    SuggestionInputComponent,\r\n  ],\r\n})\r\nexport class DoppiatoriModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CompareComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CharacterModule"
                        },
                        {
                            "name": "DoppiatoriRoutingModule"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "SuggestionInputComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DoppiatoriRoutingModule",
            "id": "module-DoppiatoriRoutingModule-737875f3925dce2d63334295f05542560b50c8dbd869db36b58f136f9dbbf44f6435a576ebac9bb9473cb751df52f0c882a4760e323f4bf685e8e5868a2eb4b2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/doppiatori/doppiatori-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CompareComponent } from './view/compare.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompareComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DoppiatoriRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LandingModule",
            "id": "module-LandingModule-31adbe2134bcfb819bafe6a76d938674d66a8e55d080b18a55d1007331698bba7c2d3ff15b79db9d2ed91ccac96113ededf8b065d3395eb4f445188896f0342d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/landing/landing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LandingComponent } from './view/landing.component';\r\nimport { LandingRoutingModule } from './landing-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InputComponent } from 'src/app/shared/components/layout/input/input.component';\r\nimport { ButtonComponent } from 'src/app/shared/components/layout/button/button.component';\r\nimport { SuggestionInputComponent } from 'src/app/shared/components/layout/suggestion-input/suggestion-input.component';\r\n\r\n@NgModule({\r\n  declarations: [LandingComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LandingRoutingModule,\r\n    InputComponent,\r\n    ButtonComponent,\r\n    FormsModule,\r\n    SuggestionInputComponent,\r\n  ],\r\n})\r\nexport class LandingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LandingComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "LandingRoutingModule"
                        },
                        {
                            "name": "SuggestionInputComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LandingRoutingModule",
            "id": "module-LandingRoutingModule-802d7326d69ea420812ebee925450ba05f2f0ce8399fb4dd7c2464f79173cf4d9c9dc412225249e20f5eb0a0d58cafbc4a463273701413920ea1b156e1b8366c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/landing/landing-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LandingComponent } from './view/landing.component';\r\nimport { LandingGuard } from './landing.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LandingComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LandingRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "WorksModule",
            "id": "module-WorksModule-821ae3cfcdd48669fbad4860e6e887f63d6def7b7032bfcfc2677bf68fac395341b4c365be2394e1dde5b9a4c9be5c7deb08976b775cbb3f463e21499cfa85e1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/works/works.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { SuggestionInputComponent } from 'src/app/shared/components/layout/suggestion-input/suggestion-input.component';\r\nimport { CardComponent } from 'src/app/shared/components/layout/card/card.component';\r\nimport { ButtonComponent } from 'src/app/shared/components/layout/button/button.component';\r\nimport { NgIconsModule } from '@ng-icons/core';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ionEye, ionEyeOff } from '@ng-icons/ionicons';\r\nimport { PaginationComponent } from 'src/app/shared/components/layout/pagination/pagination.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SearchComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [SearchComponent, CardComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SuggestionInputComponent,\r\n    ButtonComponent,\r\n    PaginationComponent,\r\n    NgIconsModule.withIcons({ ionEye, ionEyeOff }),\r\n    IonicModule.forRoot({}),\r\n  ],\r\n})\r\nexport class WorksModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "SearchComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "PaginationComponent"
                        },
                        {
                            "name": "SuggestionInputComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.development.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  url: 'http://localhost:8080/',\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  url: 'https://wee-rheta-lidiacodes-c16912fd.koyeb.app/',\r\n}"
            },
            {
                "name": "LandingGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/features/landing/landing.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "async (route, state) => {\r\n  const authSrv: AuthService = inject(AuthService);\r\n  const router: Router = inject(Router);\r\n\r\n  const user = authSrv.$user.value; // Get the current value from the BehaviorSubject\r\n\r\n  if (user) {\r\n    return true;\r\n  } else {\r\n    const token = localStorage.getItem('doppiatori');\r\n\r\n    if (token) {\r\n      try {\r\n        const validatedUser = await authSrv.getMe().toPromise(); // Validate the token and get the user\r\n        if (validatedUser) {\r\n          return true;\r\n        } else {\r\n          router.navigate(['/auth']);\r\n          return false;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error while validating token', error);\r\n        router.navigate(['/auth']);\r\n        return false;\r\n      }\r\n    } else {\r\n      router.navigate(['/auth']);\r\n      return false;\r\n    }\r\n  }\r\n}"
            },
            {
                "name": "password",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/validators/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IValidator",
                "defaultValue": "(value: string) => {\r\n  return new RegExp('^(?=.*[A-Z])(?=.*[\\\\W_]).{8,}$').test(value);\r\n}"
            },
            {
                "name": "required",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/validators/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IValidator",
                "defaultValue": "(value: string) => {\r\n  return !!value;\r\n}"
            },
            {
                "name": "workGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/features/works/work.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "(route, state) => {\r\n  return !!route.queryParamMap.get('query');\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/environments/environment.development.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.development.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  url: 'http://localhost:8080/',\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  url: 'https://wee-rheta-lidiacodes-c16912fd.koyeb.app/',\r\n}"
                }
            ],
            "src/app/features/landing/landing.guard.ts": [
                {
                    "name": "LandingGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/features/landing/landing.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "async (route, state) => {\r\n  const authSrv: AuthService = inject(AuthService);\r\n  const router: Router = inject(Router);\r\n\r\n  const user = authSrv.$user.value; // Get the current value from the BehaviorSubject\r\n\r\n  if (user) {\r\n    return true;\r\n  } else {\r\n    const token = localStorage.getItem('doppiatori');\r\n\r\n    if (token) {\r\n      try {\r\n        const validatedUser = await authSrv.getMe().toPromise(); // Validate the token and get the user\r\n        if (validatedUser) {\r\n          return true;\r\n        } else {\r\n          router.navigate(['/auth']);\r\n          return false;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error while validating token', error);\r\n        router.navigate(['/auth']);\r\n        return false;\r\n      }\r\n    } else {\r\n      router.navigate(['/auth']);\r\n      return false;\r\n    }\r\n  }\r\n}"
                }
            ],
            "src/app/core/validators/index.ts": [
                {
                    "name": "password",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/validators/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IValidator",
                    "defaultValue": "(value: string) => {\r\n  return new RegExp('^(?=.*[A-Z])(?=.*[\\\\W_]).{8,}$').test(value);\r\n}"
                },
                {
                    "name": "required",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/validators/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IValidator",
                    "defaultValue": "(value: string) => {\r\n  return !!value;\r\n}"
                }
            ],
            "src/app/features/works/work.guard.ts": [
                {
                    "name": "workGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/features/works/work.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "(route, state) => {\r\n  return !!route.queryParamMap.get('query');\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "auth",
                        "loadChildren": "./features/auth/auth.module#AuthModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/features/auth/auth-routing.module.ts",
                                        "module": "AuthRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "AuthComponent"
                                            },
                                            {
                                                "path": "user",
                                                "component": "ProfileComponent"
                                            },
                                            {
                                                "path": "user/tutorial",
                                                "component": "ImportTutorialComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AuthModule"
                            }
                        ]
                    },
                    {
                        "path": "landing",
                        "loadChildren": "./features/landing/landing.module#LandingModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/features/landing/landing-routing.module.ts",
                                        "module": "LandingRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "LandingComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "LandingModule"
                            }
                        ]
                    },
                    {
                        "path": "",
                        "redirectTo": "landing",
                        "pathMatch": "full"
                    },
                    {
                        "path": "compare",
                        "loadChildren": "./features/doppiatori/doppiatori.module#DoppiatoriModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/features/doppiatori/doppiatori-routing.module.ts",
                                        "module": "DoppiatoriRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "CompareComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "DoppiatoriModule"
                            }
                        ]
                    },
                    {
                        "path": "works",
                        "loadChildren": "./features/works/works.module#WorksModule",
                        "canActivate": [
                            "workGuard"
                        ],
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/features/works/works.module.ts",
                                        "module": "WorksModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "SearchComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "WorksModule"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/error.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "ErrorInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/token.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "TokenInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/loading.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoadingService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/validators/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "password",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/validators/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "required",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/features/auth/views/auth/auth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/features/auth/views/import-tutorial/import-tutorial.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImportTutorialComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/features/auth/views/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/features/characters/compare-card/compare-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompareCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/characters/single-character-card/single-character-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SingleCharacterCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/doppiatori/doppiatori.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DoppiatoriService",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/features/doppiatori/view/compare.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompareComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/features/landing/landing.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LandingGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/landing/view/landing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LandingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/features/works/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/features/works/work.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "workGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/works/work.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WorkService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/feedback/alert/alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/feedback/alert/alert.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AlertService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/layout/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/layout/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/layout/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/layout/navbar/navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/layout/pagination/pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/layout/suggestion-input/suggestion-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SuggestionInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/imgur-url.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ImgurUrlPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.development.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}